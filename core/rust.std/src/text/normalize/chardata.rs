use rustc_hash::{FxHashMap, FxHashSet};
use unicode_normalization::UnicodeNormalization;

use regex::Regex;

use super::codecs::sloppy::{
    Codec, CodecType, CP437, ISO_8859_2, LATIN_1, MACROMAN, SLOPPY_WINDOWS_1250,
    SLOPPY_WINDOWS_1251, SLOPPY_WINDOWS_1252, SLOPPY_WINDOWS_1253, SLOPPY_WINDOWS_1254,
};

use once_cell::sync::Lazy;

pub fn possible_encoding(text: &str, encoding: CodecType) -> bool {
    /*
    Given text and a single-byte encoding, check whether that text could have
    been decoded from that single-byte encoding.

    In other words, check whether it can be encoded in that encoding, possibly
    sloppily.
    */
    ENCODING_REGEXES[&encoding].is_match(text.as_bytes())
}

pub static CHARMAP_ENCODINGS: Lazy<Vec<(CodecType, &'static dyn Codec)>> = Lazy::new(|| {
    vec![
        (CodecType::Latin1, &*LATIN_1),
        (CodecType::SloppyWindows1252, &*SLOPPY_WINDOWS_1252),
        (CodecType::SloppyWindows1250, &*SLOPPY_WINDOWS_1250),
        (CodecType::SloppyWindows1251, &*SLOPPY_WINDOWS_1251),
        (CodecType::SloppyWindows1253, &*SLOPPY_WINDOWS_1253),
        (CodecType::SloppyWindows1254, &*SLOPPY_WINDOWS_1254),
        (CodecType::Iso88592, &*ISO_8859_2),
        (CodecType::MacRoman, &*MACROMAN),
        (CodecType::Cp437, &*CP437),
    ]
});

pub static SINGLE_QUOTE_RE: Lazy<Regex> =
    Lazy::new(|| Regex::new("\u{02bc}|\u{2018}|\u{2019}|\u{201a}|\u{201b}").unwrap());
pub static DOUBLE_QUOTE_RE: Lazy<Regex> =
    Lazy::new(|| Regex::new("\u{201c}|\u{201d}|\u{201e}|\u{201f}").unwrap());

/*
ENCODING_REGEXES contain reasonably fast ways to detect if we
could represent a given string in a given encoding. The simplest one is
the 'ascii' detector, which of course just determines if all characters
are between U+0000 and U+007F.
*/
pub static ENCODING_REGEXES: Lazy<FxHashMap<CodecType, regex::bytes::Regex>> = Lazy::new(|| {
    let mut encoding_regexes: FxHashMap<CodecType, regex::bytes::Regex> = FxHashMap::default();

    encoding_regexes.insert(
        CodecType::Ascii,
        regex::bytes::Regex::new(r"(?-u:^[\x00-\x7f]*$)").unwrap(),
    );

    /*
    Make a sequence of characters that bytes \x80 to \xFF decode to
    in each encoding, as well as byte \x1A, which is used to represent
    the replacement character � in the sloppy-* encodings.
    */
    let byte_range: Vec<u8> = (0x80..=0xFF).chain(std::iter::once(0x1A)).collect();

    for (codec_type, codec) in CHARMAP_ENCODINGS.iter() {
        let charlist = codec.decode(&byte_range);
        // for each character, encode back to utf-8
        let bytes = charlist
            .chars()
            .map(|c| c.encode_utf8(&mut [0; 4]).as_bytes().to_vec());

        // convert bytes to a regex like \x80\x81\x82\x83|\x84\x85\x86\x87|...
        let charlist = bytes
            .map(|b| {
                b.iter()
                    .map(|b| format!(r"\x{:02x}", b))
                    .collect::<Vec<String>>()
                    .join("")
            })
            .collect::<Vec<String>>()
            .join("|");

        /*
        The rest of the ASCII bytes -- bytes \x00 to \x19 and \x1B
        to \x7F -- will decode as those ASCII characters in any encoding we
        support, so we can just include them as ranges. This also lets us
        not worry about escaping regex special characters, because all of
        them are in the \x1B to \x7F range.
        */
        let regex = format!(
            r"^(?-u:[\x00-\x19\x1b-\x7f]|{charlist})*$",
            charlist = charlist
        );

        encoding_regexes.insert(*codec_type, regex::bytes::Regex::new(&regex).unwrap());
    }

    encoding_regexes
});

pub static HTML_ENTITY_RE: Lazy<Regex> =
    Lazy::new(|| Regex::new(r"&#?[0-9A-Za-z]{1,24};").unwrap());
pub static HTML_ENTITIES: Lazy<FxHashMap<String, String>> = Lazy::new(|| {
    let mut entities: FxHashMap<String, String> = FxHashMap::default();

    /*
    Create a dictionary based on the built-in HTML5 entity dictionary.
    Add a limited set of HTML entities that we'll also decode if they've
    been case-folded to uppercase, such as decoding &NTILDE; as "Ñ".
    */
    for (name, char) in HTML_ITEMS {
        if name.ends_with(";") {
            entities.insert(format!("&{}", name), char.to_string());

            /*
            Restrict the set of characters we can attempt to decode if their
            name has been uppercased. If we tried to handle all entity names,
            the results would be ambiguous.
            */
            if name == name.to_lowercase() {
                let name_upper = name.to_uppercase();
                let entity_upper = format!("&{}", name_upper);
                entities.insert(entity_upper, char.to_uppercase());
            }
        }
    }
    entities
});

pub static CONTROL_CHARS: Lazy<FxHashSet<u32>> = Lazy::new(|| {
    /*
    Build a translate mapping that strips likely-unintended control characters.
    See `plsfix::fixes::remove_control_chars` for a description of these
    codepoint ranges and why they should be removed.
    */
    let mut control_chars: FxHashSet<u32> = FxHashSet::default();

    let ranges = vec![
        0x00..0x09,
        0x0B..0x0C,
        0x0E..0x20,
        0x7F..0x80,
        0x206A..0x2070,
        0xFFF9..0xFFFD,
    ];

    for range in ranges {
        for i in range {
            control_chars.insert(i);
        }
    }

    control_chars.insert(0x0B);
    control_chars.insert(0x7F);
    control_chars.insert(0xFEFF);

    control_chars
});

/*
Recognize UTF-8 sequences that would be valid if it weren't for a b'\xa0'
that some Windows-1252 program converted to a plain space.

The smaller values are included on a case-by-case basis, because we don't want
to decode likely input sequences to unlikely characters. These are the ones
that *do* form likely characters before 0xa0:

0xc2 -> U+A0 NO-BREAK SPACE
0xc3 -> U+E0 LATIN SMALL LETTER A WITH GRAVE
0xc5 -> U+160 LATIN CAPITAL LETTER S WITH CARON
0xce -> U+3A0 GREEK CAPITAL LETTER PI
0xd0 -> U+420 CYRILLIC CAPITAL LETTER ER
0xd9 -> U+660 ARABIC-INDIC DIGIT ZERO

In three-character sequences, we exclude some lead bytes in some cases.

When the lead byte is immediately followed by 0xA0, we shouldn't accept
a space there, because it leads to some less-likely character ranges:

0xe0 -> Samaritan script
0xe1 -> Mongolian script (corresponds to Latin-1 'á' which is too common)

We accept 0xe2 and 0xe3, which cover many scripts. Bytes 0xe4 and
higher point mostly to CJK characters, which we generally don't want to
decode near Latin lowercase letters.

In four-character sequences, the lead byte must be F0, because that accounts
for almost all of the usage of high-numbered codepoints (tag characters whose
UTF-8 starts with the byte F3 are only used in some rare new emoji sequences).

This is meant to be applied to encodings of text that tests true for `is_bad`.
Any of these could represent characters that legitimately appear surrounded by
spaces, particularly U+C5 (Å), which is a word in multiple languages!

We should consider checking for b'\x85' being converted to ... in the future.
I've seen it once, but the text still wasn't recoverable.
*/
pub static ALTERED_UTF8_RE: Lazy<regex::bytes::Regex> = Lazy::new(|| {
    regex::bytes::Regex::new(
        &(r"(?-u:".to_string()
            + r"[\xc2\xc3\xc5\xce\xd0\xd9][ ]"
            + r"|[\xe2\xe3][ ][\x80-\x84\x86-\x9f\xa1-\xbf]"
            + r"|[\xe0-\xe3][\x80-\x84\x86-\x9f\xa1-\xbf][ ]"
            + r"|[\xf0][ ][\x80-\xbf][\x80-\xbf]"
            + r"|[\xf0][\x80-\xbf][ ][\x80-\xbf]"
            + r"|[\xf0][\x80-\xbf][\x80-\xbf][ ]"
            + r")"),
    )
    .unwrap()
});

/*
This expression matches UTF-8 and CESU-8 sequences where some of the
continuation bytes have been lost. The byte 0x1a (sometimes written as ^Z) is
used within plsfix to represent a byte that produced the replacement character
\ufffd. We don't know which byte it was, but we can at least decode the UTF-8
sequence as \ufffd instead of failing to re-decode it at all.

In some cases, we allow the ASCII '?' in place of \ufffd, but at most once per
sequence.
*/
pub static LOSSY_UTF8_RE: Lazy<regex::bytes::Regex> = Lazy::new(|| {
    regex::bytes::Regex::new(
        &(r"(?-u:".to_string()
            + r"[\xc2-\xdf][\x1a]"
            + r"|[\xc2-\xc3][?]"
            + r"|\xed[\xa0-\xaf][\x1a?]\xed[\xb0-\xbf][\x1a?\x80-\xbf]"
            + r"|\xed[\xa0-\xaf][\x1a?\x80-\xbf]\xed[\xb0-\xbf][\x1a?]"
            + r"|[\xe0-\xef][\x1a?][\x1a\x80-\xbf]"
            + r"|[\xe0-\xef][\x1a\x80-\xbf][\x1a?]"
            + r"|[\xf0-\xf4][\x1a?][\x1a\x80-\xbf][\x1a\x80-\xbf]"
            + r"|[\xf0-\xf4][\x1a\x80-\xbf][\x1a?][\x1a\x80-\xbf]"
            + r"|[\xf0-\xf4][\x1a\x80-\xbf][\x1a\x80-\xbf][\x1a?]"
            + r"|\x1a"
            + r")"),
    )
    .unwrap()
});

/*
This regex matches C1 control characters, which occupy some of the positions
in the Latin-1 character map that Windows assigns to other characters instead.
*/
pub static C1_CONTROL_RE: Lazy<fancy_regex::Regex> =
    Lazy::new(|| fancy_regex::Regex::new(r"[\x80-\x9f]").unwrap());

/*
A translate mapping that breaks ligatures made of Latin letters. While
ligatures may be important to the representation of other languages, in Latin
letters they tend to represent a copy/paste error. It omits ligatures such
as æ that are frequently used intentionally.

This list additionally includes some Latin digraphs that represent two
characters for legacy encoding reasons, not for typographical reasons.

Ligatures and digraphs may also be separated by NFKC normalization, but that
is sometimes more normalization than you want.
*/
pub static LIGATURES: Lazy<FxHashMap<u32, &'static str>> = Lazy::new(|| {
    let mut ligatures: FxHashMap<u32, &str> = FxHashMap::default();

    ligatures.insert('Ĳ' as u32, "IJ"); // Dutch ligatures
    ligatures.insert('ĳ' as u32, "ij");
    ligatures.insert('ŉ' as u32, "ʼn"); // Afrikaans digraph meant to avoid auto-curled quote
    ligatures.insert('Ǳ' as u32, "DZ"); // Serbian/Croatian digraphs for Cyrillic conversion
    ligatures.insert('ǲ' as u32, "Dz");
    ligatures.insert('ǳ' as u32, "dz");
    ligatures.insert('Ǆ' as u32, "DŽ");
    ligatures.insert('ǅ' as u32, "Dž");
    ligatures.insert('ǆ' as u32, "dž");
    ligatures.insert('Ǉ' as u32, "LJ");
    ligatures.insert('ǈ' as u32, "Lj");
    ligatures.insert('ǉ' as u32, "lj");
    ligatures.insert('Ǌ' as u32, "NJ");
    ligatures.insert('ǋ' as u32, "Nj");
    ligatures.insert('ǌ' as u32, "nj");
    ligatures.insert('ﬀ' as u32, "ff"); // Latin typographical ligatures
    ligatures.insert('ﬁ' as u32, "fi");
    ligatures.insert('ﬂ' as u32, "fl");
    ligatures.insert('ﬃ' as u32, "ffi");
    ligatures.insert('ﬄ' as u32, "ffl");
    ligatures.insert('ﬅ' as u32, "ſt");
    ligatures.insert('ﬆ' as u32, "st");

    ligatures
});

pub static WIDTH_MAP: Lazy<FxHashMap<u32, char>> = Lazy::new(|| {
    let mut width_map: FxHashMap<u32, char> = FxHashMap::default();
    // Though it's not listed as a fullwidth character, we'll want to convert
    // U+3000 IDEOGRAPHIC SPACE to U+20 SPACE on the same principle, so start
    // with that in the dictionary.
    width_map.insert(0x3000, ' ');

    for i in 0xFF01..0xFFF0 {
        if let Some(ci) = std::char::from_u32(i) {
            let alternate = ci.nfkc().next();
            if let Some(c) = alternate {
                if c != ci {
                    width_map.insert(i, c);
                }
            }
        }
    }
    width_map
});

/*
This regex uses UTF8_CLUES to find sequences of likely mojibake.
It matches them with + so that several adjacent UTF-8-looking sequences
get coalesced into one, allowing them to be fixed more efficiently
and not requiring every individual subsequence to be detected as 'badness'.

We accept spaces in place of "utf8_continuation", because spaces might have
been intended to be U+A0 NO-BREAK SPACE.

We do a lookbehind to make sure the previous character isn't a
"utf8_continuation_strict" character, so that we don't fix just a few
characters in a huge garble and make the situation worse.

Unfortunately, the matches to this regular expression won't show their
surrounding context, and including context would make the expression much
less efficient. The 'badness' rules that require context, such as a preceding
lowercase letter, will prevent some cases of inconsistent UTF-8 from being
fixed when they don't see it.
*/
pub static UTF8_DETECTOR_RE: Lazy<fancy_regex::Regex> = Lazy::new(|| {
    fancy_regex::Regex::new(
    &format!(
        r"(?<![{utf8_continuation_strict}])
(
[{utf8_first_of_2}][{utf8_continuation}]
|
[{utf8_first_of_3}][{utf8_continuation}]{{2}}
|
[{utf8_first_of_4}][{utf8_continuation}]{{3}}
)+",
        // Letters that decode to 0x80 - 0xBF in a Latin-1-like encoding,
        // and don't usually stand for themselves when adjacent to mojibake.
        // This excludes spaces, dashes, quotation marks, and ellipses.
        utf8_continuation_strict = r"\x80-\xbfĄąĽľŁłŒœŚśŞşŠšŤťŸŹźŻżŽžƒˆˇ˘˛˜˝΄΅ΆΈΉΊΌΎΏЁЂЃЄЅІЇЈЉЊЋЌЎЏёђѓєѕіїјљњћќўџҐґ†‡•‰‹›€№™",
        // Letters that decode to 0xC2 - 0xDF in a Latin-1-like encoding
        utf8_first_of_2 = "ÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßĂĆČĎĐĘĚĞİĹŃŇŐŘŞŢŮŰΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩΪΫάέήίВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ",
        // Letters that decode to 0xE0 - 0xEF in a Latin-1-like encoding
        utf8_first_of_3 = "àáâãäåæçèéêëìíîïăćčďęěĺŕΰαβγδεζηθικλμνξοабвгдежзийклмноп",
        // Letters that decode to 0xF0 or 0xF3 in a Latin-1-like encoding.
        // # (Other leading bytes correspond only to unassigned codepoints)
        utf8_first_of_4 = "ðóđğπσру",
        // Letters that decode to 0x80 - 0xBF in a Latin-1-like encoding,
        // including a space standing in for 0xA0
        utf8_continuation = r"\x80-\xbfĄąĽľŁłŒœŚśŞşŠšŤťŸŹźŻżŽžƒˆˇ˘˛˜˝΄΅ΆΈΉΊΌΎΏЁЂЃЄЅІЇЈЉЊЋЌЎЏёђѓєѕіїјљњћќўџҐґ–—―‘’‚“”„†‡•…‰‹›€№™ "
    )
    .replace("\n", ""),
)
.expect("Failed to compile the regex")
});

/// for x,y in html.entities.html5.items():
///     print(f'(r##"{x}"##, r##"{y}"##),')
#[allow(clippy::invisible_characters)]
static HTML_ITEMS: [(&str, &str); 2231] = [
    (r##"Aacute"##, r##"Á"##),
    (r##"aacute"##, r##"á"##),
    (r##"Aacute;"##, r##"Á"##),
    (r##"aacute;"##, r##"á"##),
    (r##"Abreve;"##, r##"Ă"##),
    (r##"abreve;"##, r##"ă"##),
    (r##"ac;"##, r##"∾"##),
    (r##"acd;"##, r##"∿"##),
    (r##"acE;"##, r##"∾̳"##),
    (r##"Acirc"##, r##"Â"##),
    (r##"acirc"##, r##"â"##),
    (r##"Acirc;"##, r##"Â"##),
    (r##"acirc;"##, r##"â"##),
    (r##"acute"##, r##"´"##),
    (r##"acute;"##, r##"´"##),
    (r##"Acy;"##, r##"А"##),
    (r##"acy;"##, r##"а"##),
    (r##"AElig"##, r##"Æ"##),
    (r##"aelig"##, r##"æ"##),
    (r##"AElig;"##, r##"Æ"##),
    (r##"aelig;"##, r##"æ"##),
    (r##"af;"##, r##"⁡"##),
    (r##"Afr;"##, r##"𝔄"##),
    (r##"afr;"##, r##"𝔞"##),
    (r##"Agrave"##, r##"À"##),
    (r##"agrave"##, r##"à"##),
    (r##"Agrave;"##, r##"À"##),
    (r##"agrave;"##, r##"à"##),
    (r##"alefsym;"##, r##"ℵ"##),
    (r##"aleph;"##, r##"ℵ"##),
    (r##"Alpha;"##, r##"Α"##),
    (r##"alpha;"##, r##"α"##),
    (r##"Amacr;"##, r##"Ā"##),
    (r##"amacr;"##, r##"ā"##),
    (r##"amalg;"##, r##"⨿"##),
    (r##"AMP"##, r##"&"##),
    (r##"amp"##, r##"&"##),
    (r##"AMP;"##, r##"&"##),
    (r##"amp;"##, r##"&"##),
    (r##"And;"##, r##"⩓"##),
    (r##"and;"##, r##"∧"##),
    (r##"andand;"##, r##"⩕"##),
    (r##"andd;"##, r##"⩜"##),
    (r##"andslope;"##, r##"⩘"##),
    (r##"andv;"##, r##"⩚"##),
    (r##"ang;"##, r##"∠"##),
    (r##"ange;"##, r##"⦤"##),
    (r##"angle;"##, r##"∠"##),
    (r##"angmsd;"##, r##"∡"##),
    (r##"angmsdaa;"##, r##"⦨"##),
    (r##"angmsdab;"##, r##"⦩"##),
    (r##"angmsdac;"##, r##"⦪"##),
    (r##"angmsdad;"##, r##"⦫"##),
    (r##"angmsdae;"##, r##"⦬"##),
    (r##"angmsdaf;"##, r##"⦭"##),
    (r##"angmsdag;"##, r##"⦮"##),
    (r##"angmsdah;"##, r##"⦯"##),
    (r##"angrt;"##, r##"∟"##),
    (r##"angrtvb;"##, r##"⊾"##),
    (r##"angrtvbd;"##, r##"⦝"##),
    (r##"angsph;"##, r##"∢"##),
    (r##"angst;"##, r##"Å"##),
    (r##"angzarr;"##, r##"⍼"##),
    (r##"Aogon;"##, r##"Ą"##),
    (r##"aogon;"##, r##"ą"##),
    (r##"Aopf;"##, r##"𝔸"##),
    (r##"aopf;"##, r##"𝕒"##),
    (r##"ap;"##, r##"≈"##),
    (r##"apacir;"##, r##"⩯"##),
    (r##"apE;"##, r##"⩰"##),
    (r##"ape;"##, r##"≊"##),
    (r##"apid;"##, r##"≋"##),
    (r##"apos;"##, r##"'"##),
    (r##"ApplyFunction;"##, r##"⁡"##),
    (r##"approx;"##, r##"≈"##),
    (r##"approxeq;"##, r##"≊"##),
    (r##"Aring"##, r##"Å"##),
    (r##"aring"##, r##"å"##),
    (r##"Aring;"##, r##"Å"##),
    (r##"aring;"##, r##"å"##),
    (r##"Ascr;"##, r##"𝒜"##),
    (r##"ascr;"##, r##"𝒶"##),
    (r##"Assign;"##, r##"≔"##),
    (r##"ast;"##, r##"*"##),
    (r##"asymp;"##, r##"≈"##),
    (r##"asympeq;"##, r##"≍"##),
    (r##"Atilde"##, r##"Ã"##),
    (r##"atilde"##, r##"ã"##),
    (r##"Atilde;"##, r##"Ã"##),
    (r##"atilde;"##, r##"ã"##),
    (r##"Auml"##, r##"Ä"##),
    (r##"auml"##, r##"ä"##),
    (r##"Auml;"##, r##"Ä"##),
    (r##"auml;"##, r##"ä"##),
    (r##"awconint;"##, r##"∳"##),
    (r##"awint;"##, r##"⨑"##),
    (r##"backcong;"##, r##"≌"##),
    (r##"backepsilon;"##, r##"϶"##),
    (r##"backprime;"##, r##"‵"##),
    (r##"backsim;"##, r##"∽"##),
    (r##"backsimeq;"##, r##"⋍"##),
    (r##"Backslash;"##, r##"∖"##),
    (r##"Barv;"##, r##"⫧"##),
    (r##"barvee;"##, r##"⊽"##),
    (r##"Barwed;"##, r##"⌆"##),
    (r##"barwed;"##, r##"⌅"##),
    (r##"barwedge;"##, r##"⌅"##),
    (r##"bbrk;"##, r##"⎵"##),
    (r##"bbrktbrk;"##, r##"⎶"##),
    (r##"bcong;"##, r##"≌"##),
    (r##"Bcy;"##, r##"Б"##),
    (r##"bcy;"##, r##"б"##),
    (r##"bdquo;"##, r##"„"##),
    (r##"becaus;"##, r##"∵"##),
    (r##"Because;"##, r##"∵"##),
    (r##"because;"##, r##"∵"##),
    (r##"bemptyv;"##, r##"⦰"##),
    (r##"bepsi;"##, r##"϶"##),
    (r##"bernou;"##, r##"ℬ"##),
    (r##"Bernoullis;"##, r##"ℬ"##),
    (r##"Beta;"##, r##"Β"##),
    (r##"beta;"##, r##"β"##),
    (r##"beth;"##, r##"ℶ"##),
    (r##"between;"##, r##"≬"##),
    (r##"Bfr;"##, r##"𝔅"##),
    (r##"bfr;"##, r##"𝔟"##),
    (r##"bigcap;"##, r##"⋂"##),
    (r##"bigcirc;"##, r##"◯"##),
    (r##"bigcup;"##, r##"⋃"##),
    (r##"bigodot;"##, r##"⨀"##),
    (r##"bigoplus;"##, r##"⨁"##),
    (r##"bigotimes;"##, r##"⨂"##),
    (r##"bigsqcup;"##, r##"⨆"##),
    (r##"bigstar;"##, r##"★"##),
    (r##"bigtriangledown;"##, r##"▽"##),
    (r##"bigtriangleup;"##, r##"△"##),
    (r##"biguplus;"##, r##"⨄"##),
    (r##"bigvee;"##, r##"⋁"##),
    (r##"bigwedge;"##, r##"⋀"##),
    (r##"bkarow;"##, r##"⤍"##),
    (r##"blacklozenge;"##, r##"⧫"##),
    (r##"blacksquare;"##, r##"▪"##),
    (r##"blacktriangle;"##, r##"▴"##),
    (r##"blacktriangledown;"##, r##"▾"##),
    (r##"blacktriangleleft;"##, r##"◂"##),
    (r##"blacktriangleright;"##, r##"▸"##),
    (r##"blank;"##, r##"␣"##),
    (r##"blk12;"##, r##"▒"##),
    (r##"blk14;"##, r##"░"##),
    (r##"blk34;"##, r##"▓"##),
    (r##"block;"##, r##"█"##),
    (r##"bne;"##, r##"=⃥"##),
    (r##"bnequiv;"##, r##"≡⃥"##),
    (r##"bNot;"##, r##"⫭"##),
    (r##"bnot;"##, r##"⌐"##),
    (r##"Bopf;"##, r##"𝔹"##),
    (r##"bopf;"##, r##"𝕓"##),
    (r##"bot;"##, r##"⊥"##),
    (r##"bottom;"##, r##"⊥"##),
    (r##"bowtie;"##, r##"⋈"##),
    (r##"boxbox;"##, r##"⧉"##),
    (r##"boxDL;"##, r##"╗"##),
    (r##"boxDl;"##, r##"╖"##),
    (r##"boxdL;"##, r##"╕"##),
    (r##"boxdl;"##, r##"┐"##),
    (r##"boxDR;"##, r##"╔"##),
    (r##"boxDr;"##, r##"╓"##),
    (r##"boxdR;"##, r##"╒"##),
    (r##"boxdr;"##, r##"┌"##),
    (r##"boxH;"##, r##"═"##),
    (r##"boxh;"##, r##"─"##),
    (r##"boxHD;"##, r##"╦"##),
    (r##"boxHd;"##, r##"╤"##),
    (r##"boxhD;"##, r##"╥"##),
    (r##"boxhd;"##, r##"┬"##),
    (r##"boxHU;"##, r##"╩"##),
    (r##"boxHu;"##, r##"╧"##),
    (r##"boxhU;"##, r##"╨"##),
    (r##"boxhu;"##, r##"┴"##),
    (r##"boxminus;"##, r##"⊟"##),
    (r##"boxplus;"##, r##"⊞"##),
    (r##"boxtimes;"##, r##"⊠"##),
    (r##"boxUL;"##, r##"╝"##),
    (r##"boxUl;"##, r##"╜"##),
    (r##"boxuL;"##, r##"╛"##),
    (r##"boxul;"##, r##"┘"##),
    (r##"boxUR;"##, r##"╚"##),
    (r##"boxUr;"##, r##"╙"##),
    (r##"boxuR;"##, r##"╘"##),
    (r##"boxur;"##, r##"└"##),
    (r##"boxV;"##, r##"║"##),
    (r##"boxv;"##, r##"│"##),
    (r##"boxVH;"##, r##"╬"##),
    (r##"boxVh;"##, r##"╫"##),
    (r##"boxvH;"##, r##"╪"##),
    (r##"boxvh;"##, r##"┼"##),
    (r##"boxVL;"##, r##"╣"##),
    (r##"boxVl;"##, r##"╢"##),
    (r##"boxvL;"##, r##"╡"##),
    (r##"boxvl;"##, r##"┤"##),
    (r##"boxVR;"##, r##"╠"##),
    (r##"boxVr;"##, r##"╟"##),
    (r##"boxvR;"##, r##"╞"##),
    (r##"boxvr;"##, r##"├"##),
    (r##"bprime;"##, r##"‵"##),
    (r##"Breve;"##, r##"˘"##),
    (r##"breve;"##, r##"˘"##),
    (r##"brvbar"##, r##"¦"##),
    (r##"brvbar;"##, r##"¦"##),
    (r##"Bscr;"##, r##"ℬ"##),
    (r##"bscr;"##, r##"𝒷"##),
    (r##"bsemi;"##, r##"⁏"##),
    (r##"bsim;"##, r##"∽"##),
    (r##"bsime;"##, r##"⋍"##),
    (r##"bsol;"##, r##"\"##),
    (r##"bsolb;"##, r##"⧅"##),
    (r##"bsolhsub;"##, r##"⟈"##),
    (r##"bull;"##, r##"•"##),
    (r##"bullet;"##, r##"•"##),
    (r##"bump;"##, r##"≎"##),
    (r##"bumpE;"##, r##"⪮"##),
    (r##"bumpe;"##, r##"≏"##),
    (r##"Bumpeq;"##, r##"≎"##),
    (r##"bumpeq;"##, r##"≏"##),
    (r##"Cacute;"##, r##"Ć"##),
    (r##"cacute;"##, r##"ć"##),
    (r##"Cap;"##, r##"⋒"##),
    (r##"cap;"##, r##"∩"##),
    (r##"capand;"##, r##"⩄"##),
    (r##"capbrcup;"##, r##"⩉"##),
    (r##"capcap;"##, r##"⩋"##),
    (r##"capcup;"##, r##"⩇"##),
    (r##"capdot;"##, r##"⩀"##),
    (r##"CapitalDifferentialD;"##, r##"ⅅ"##),
    (r##"caps;"##, r##"∩︀"##),
    (r##"caret;"##, r##"⁁"##),
    (r##"caron;"##, r##"ˇ"##),
    (r##"Cayleys;"##, r##"ℭ"##),
    (r##"ccaps;"##, r##"⩍"##),
    (r##"Ccaron;"##, r##"Č"##),
    (r##"ccaron;"##, r##"č"##),
    (r##"Ccedil"##, r##"Ç"##),
    (r##"ccedil"##, r##"ç"##),
    (r##"Ccedil;"##, r##"Ç"##),
    (r##"ccedil;"##, r##"ç"##),
    (r##"Ccirc;"##, r##"Ĉ"##),
    (r##"ccirc;"##, r##"ĉ"##),
    (r##"Cconint;"##, r##"∰"##),
    (r##"ccups;"##, r##"⩌"##),
    (r##"ccupssm;"##, r##"⩐"##),
    (r##"Cdot;"##, r##"Ċ"##),
    (r##"cdot;"##, r##"ċ"##),
    (r##"cedil"##, r##"¸"##),
    (r##"cedil;"##, r##"¸"##),
    (r##"Cedilla;"##, r##"¸"##),
    (r##"cemptyv;"##, r##"⦲"##),
    (r##"cent"##, r##"¢"##),
    (r##"cent;"##, r##"¢"##),
    (r##"CenterDot;"##, r##"·"##),
    (r##"centerdot;"##, r##"·"##),
    (r##"Cfr;"##, r##"ℭ"##),
    (r##"cfr;"##, r##"𝔠"##),
    (r##"CHcy;"##, r##"Ч"##),
    (r##"chcy;"##, r##"ч"##),
    (r##"check;"##, r##"✓"##),
    (r##"checkmark;"##, r##"✓"##),
    (r##"Chi;"##, r##"Χ"##),
    (r##"chi;"##, r##"χ"##),
    (r##"cir;"##, r##"○"##),
    (r##"circ;"##, r##"ˆ"##),
    (r##"circeq;"##, r##"≗"##),
    (r##"circlearrowleft;"##, r##"↺"##),
    (r##"circlearrowright;"##, r##"↻"##),
    (r##"circledast;"##, r##"⊛"##),
    (r##"circledcirc;"##, r##"⊚"##),
    (r##"circleddash;"##, r##"⊝"##),
    (r##"CircleDot;"##, r##"⊙"##),
    (r##"circledR;"##, r##"®"##),
    (r##"circledS;"##, r##"Ⓢ"##),
    (r##"CircleMinus;"##, r##"⊖"##),
    (r##"CirclePlus;"##, r##"⊕"##),
    (r##"CircleTimes;"##, r##"⊗"##),
    (r##"cirE;"##, r##"⧃"##),
    (r##"cire;"##, r##"≗"##),
    (r##"cirfnint;"##, r##"⨐"##),
    (r##"cirmid;"##, r##"⫯"##),
    (r##"cirscir;"##, r##"⧂"##),
    (r##"ClockwiseContourIntegral;"##, r##"∲"##),
    (r##"CloseCurlyDoubleQuote;"##, r##"”"##),
    (r##"CloseCurlyQuote;"##, r##"’"##),
    (r##"clubs;"##, r##"♣"##),
    (r##"clubsuit;"##, r##"♣"##),
    (r##"Colon;"##, r##"∷"##),
    (r##"colon;"##, r##":"##),
    (r##"Colone;"##, r##"⩴"##),
    (r##"colone;"##, r##"≔"##),
    (r##"coloneq;"##, r##"≔"##),
    (r##"comma;"##, r##","##),
    (r##"commat;"##, r##"@"##),
    (r##"comp;"##, r##"∁"##),
    (r##"compfn;"##, r##"∘"##),
    (r##"complement;"##, r##"∁"##),
    (r##"complexes;"##, r##"ℂ"##),
    (r##"cong;"##, r##"≅"##),
    (r##"congdot;"##, r##"⩭"##),
    (r##"Congruent;"##, r##"≡"##),
    (r##"Conint;"##, r##"∯"##),
    (r##"conint;"##, r##"∮"##),
    (r##"ContourIntegral;"##, r##"∮"##),
    (r##"Copf;"##, r##"ℂ"##),
    (r##"copf;"##, r##"𝕔"##),
    (r##"coprod;"##, r##"∐"##),
    (r##"Coproduct;"##, r##"∐"##),
    (r##"COPY"##, r##"©"##),
    (r##"copy"##, r##"©"##),
    (r##"COPY;"##, r##"©"##),
    (r##"copy;"##, r##"©"##),
    (r##"copysr;"##, r##"℗"##),
    (r##"CounterClockwiseContourIntegral;"##, r##"∳"##),
    (r##"crarr;"##, r##"↵"##),
    (r##"Cross;"##, r##"⨯"##),
    (r##"cross;"##, r##"✗"##),
    (r##"Cscr;"##, r##"𝒞"##),
    (r##"cscr;"##, r##"𝒸"##),
    (r##"csub;"##, r##"⫏"##),
    (r##"csube;"##, r##"⫑"##),
    (r##"csup;"##, r##"⫐"##),
    (r##"csupe;"##, r##"⫒"##),
    (r##"ctdot;"##, r##"⋯"##),
    (r##"cudarrl;"##, r##"⤸"##),
    (r##"cudarrr;"##, r##"⤵"##),
    (r##"cuepr;"##, r##"⋞"##),
    (r##"cuesc;"##, r##"⋟"##),
    (r##"cularr;"##, r##"↶"##),
    (r##"cularrp;"##, r##"⤽"##),
    (r##"Cup;"##, r##"⋓"##),
    (r##"cup;"##, r##"∪"##),
    (r##"cupbrcap;"##, r##"⩈"##),
    (r##"CupCap;"##, r##"≍"##),
    (r##"cupcap;"##, r##"⩆"##),
    (r##"cupcup;"##, r##"⩊"##),
    (r##"cupdot;"##, r##"⊍"##),
    (r##"cupor;"##, r##"⩅"##),
    (r##"cups;"##, r##"∪︀"##),
    (r##"curarr;"##, r##"↷"##),
    (r##"curarrm;"##, r##"⤼"##),
    (r##"curlyeqprec;"##, r##"⋞"##),
    (r##"curlyeqsucc;"##, r##"⋟"##),
    (r##"curlyvee;"##, r##"⋎"##),
    (r##"curlywedge;"##, r##"⋏"##),
    (r##"curren"##, r##"¤"##),
    (r##"curren;"##, r##"¤"##),
    (r##"curvearrowleft;"##, r##"↶"##),
    (r##"curvearrowright;"##, r##"↷"##),
    (r##"cuvee;"##, r##"⋎"##),
    (r##"cuwed;"##, r##"⋏"##),
    (r##"cwconint;"##, r##"∲"##),
    (r##"cwint;"##, r##"∱"##),
    (r##"cylcty;"##, r##"⌭"##),
    (r##"Dagger;"##, r##"‡"##),
    (r##"dagger;"##, r##"†"##),
    (r##"daleth;"##, r##"ℸ"##),
    (r##"Darr;"##, r##"↡"##),
    (r##"dArr;"##, r##"⇓"##),
    (r##"darr;"##, r##"↓"##),
    (r##"dash;"##, r##"‐"##),
    (r##"Dashv;"##, r##"⫤"##),
    (r##"dashv;"##, r##"⊣"##),
    (r##"dbkarow;"##, r##"⤏"##),
    (r##"dblac;"##, r##"˝"##),
    (r##"Dcaron;"##, r##"Ď"##),
    (r##"dcaron;"##, r##"ď"##),
    (r##"Dcy;"##, r##"Д"##),
    (r##"dcy;"##, r##"д"##),
    (r##"DD;"##, r##"ⅅ"##),
    (r##"dd;"##, r##"ⅆ"##),
    (r##"ddagger;"##, r##"‡"##),
    (r##"ddarr;"##, r##"⇊"##),
    (r##"DDotrahd;"##, r##"⤑"##),
    (r##"ddotseq;"##, r##"⩷"##),
    (r##"deg"##, r##"°"##),
    (r##"deg;"##, r##"°"##),
    (r##"Del;"##, r##"∇"##),
    (r##"Delta;"##, r##"Δ"##),
    (r##"delta;"##, r##"δ"##),
    (r##"demptyv;"##, r##"⦱"##),
    (r##"dfisht;"##, r##"⥿"##),
    (r##"Dfr;"##, r##"𝔇"##),
    (r##"dfr;"##, r##"𝔡"##),
    (r##"dHar;"##, r##"⥥"##),
    (r##"dharl;"##, r##"⇃"##),
    (r##"dharr;"##, r##"⇂"##),
    (r##"DiacriticalAcute;"##, r##"´"##),
    (r##"DiacriticalDot;"##, r##"˙"##),
    (r##"DiacriticalDoubleAcute;"##, r##"˝"##),
    (r##"DiacriticalGrave;"##, r##"`"##),
    (r##"DiacriticalTilde;"##, r##"˜"##),
    (r##"diam;"##, r##"⋄"##),
    (r##"Diamond;"##, r##"⋄"##),
    (r##"diamond;"##, r##"⋄"##),
    (r##"diamondsuit;"##, r##"♦"##),
    (r##"diams;"##, r##"♦"##),
    (r##"die;"##, r##"¨"##),
    (r##"DifferentialD;"##, r##"ⅆ"##),
    (r##"digamma;"##, r##"ϝ"##),
    (r##"disin;"##, r##"⋲"##),
    (r##"div;"##, r##"÷"##),
    (r##"divide"##, r##"÷"##),
    (r##"divide;"##, r##"÷"##),
    (r##"divideontimes;"##, r##"⋇"##),
    (r##"divonx;"##, r##"⋇"##),
    (r##"DJcy;"##, r##"Ђ"##),
    (r##"djcy;"##, r##"ђ"##),
    (r##"dlcorn;"##, r##"⌞"##),
    (r##"dlcrop;"##, r##"⌍"##),
    (r##"dollar;"##, r##"$"##),
    (r##"Dopf;"##, r##"𝔻"##),
    (r##"dopf;"##, r##"𝕕"##),
    (r##"Dot;"##, r##"¨"##),
    (r##"dot;"##, r##"˙"##),
    (r##"DotDot;"##, r##"⃜"##),
    (r##"doteq;"##, r##"≐"##),
    (r##"doteqdot;"##, r##"≑"##),
    (r##"DotEqual;"##, r##"≐"##),
    (r##"dotminus;"##, r##"∸"##),
    (r##"dotplus;"##, r##"∔"##),
    (r##"dotsquare;"##, r##"⊡"##),
    (r##"doublebarwedge;"##, r##"⌆"##),
    (r##"DoubleContourIntegral;"##, r##"∯"##),
    (r##"DoubleDot;"##, r##"¨"##),
    (r##"DoubleDownArrow;"##, r##"⇓"##),
    (r##"DoubleLeftArrow;"##, r##"⇐"##),
    (r##"DoubleLeftRightArrow;"##, r##"⇔"##),
    (r##"DoubleLeftTee;"##, r##"⫤"##),
    (r##"DoubleLongLeftArrow;"##, r##"⟸"##),
    (r##"DoubleLongLeftRightArrow;"##, r##"⟺"##),
    (r##"DoubleLongRightArrow;"##, r##"⟹"##),
    (r##"DoubleRightArrow;"##, r##"⇒"##),
    (r##"DoubleRightTee;"##, r##"⊨"##),
    (r##"DoubleUpArrow;"##, r##"⇑"##),
    (r##"DoubleUpDownArrow;"##, r##"⇕"##),
    (r##"DoubleVerticalBar;"##, r##"∥"##),
    (r##"DownArrow;"##, r##"↓"##),
    (r##"Downarrow;"##, r##"⇓"##),
    (r##"downarrow;"##, r##"↓"##),
    (r##"DownArrowBar;"##, r##"⤓"##),
    (r##"DownArrowUpArrow;"##, r##"⇵"##),
    (r##"DownBreve;"##, r##"̑"##),
    (r##"downdownarrows;"##, r##"⇊"##),
    (r##"downharpoonleft;"##, r##"⇃"##),
    (r##"downharpoonright;"##, r##"⇂"##),
    (r##"DownLeftRightVector;"##, r##"⥐"##),
    (r##"DownLeftTeeVector;"##, r##"⥞"##),
    (r##"DownLeftVector;"##, r##"↽"##),
    (r##"DownLeftVectorBar;"##, r##"⥖"##),
    (r##"DownRightTeeVector;"##, r##"⥟"##),
    (r##"DownRightVector;"##, r##"⇁"##),
    (r##"DownRightVectorBar;"##, r##"⥗"##),
    (r##"DownTee;"##, r##"⊤"##),
    (r##"DownTeeArrow;"##, r##"↧"##),
    (r##"drbkarow;"##, r##"⤐"##),
    (r##"drcorn;"##, r##"⌟"##),
    (r##"drcrop;"##, r##"⌌"##),
    (r##"Dscr;"##, r##"𝒟"##),
    (r##"dscr;"##, r##"𝒹"##),
    (r##"DScy;"##, r##"Ѕ"##),
    (r##"dscy;"##, r##"ѕ"##),
    (r##"dsol;"##, r##"⧶"##),
    (r##"Dstrok;"##, r##"Đ"##),
    (r##"dstrok;"##, r##"đ"##),
    (r##"dtdot;"##, r##"⋱"##),
    (r##"dtri;"##, r##"▿"##),
    (r##"dtrif;"##, r##"▾"##),
    (r##"duarr;"##, r##"⇵"##),
    (r##"duhar;"##, r##"⥯"##),
    (r##"dwangle;"##, r##"⦦"##),
    (r##"DZcy;"##, r##"Џ"##),
    (r##"dzcy;"##, r##"џ"##),
    (r##"dzigrarr;"##, r##"⟿"##),
    (r##"Eacute"##, r##"É"##),
    (r##"eacute"##, r##"é"##),
    (r##"Eacute;"##, r##"É"##),
    (r##"eacute;"##, r##"é"##),
    (r##"easter;"##, r##"⩮"##),
    (r##"Ecaron;"##, r##"Ě"##),
    (r##"ecaron;"##, r##"ě"##),
    (r##"ecir;"##, r##"≖"##),
    (r##"Ecirc"##, r##"Ê"##),
    (r##"ecirc"##, r##"ê"##),
    (r##"Ecirc;"##, r##"Ê"##),
    (r##"ecirc;"##, r##"ê"##),
    (r##"ecolon;"##, r##"≕"##),
    (r##"Ecy;"##, r##"Э"##),
    (r##"ecy;"##, r##"э"##),
    (r##"eDDot;"##, r##"⩷"##),
    (r##"Edot;"##, r##"Ė"##),
    (r##"eDot;"##, r##"≑"##),
    (r##"edot;"##, r##"ė"##),
    (r##"ee;"##, r##"ⅇ"##),
    (r##"efDot;"##, r##"≒"##),
    (r##"Efr;"##, r##"𝔈"##),
    (r##"efr;"##, r##"𝔢"##),
    (r##"eg;"##, r##"⪚"##),
    (r##"Egrave"##, r##"È"##),
    (r##"egrave"##, r##"è"##),
    (r##"Egrave;"##, r##"È"##),
    (r##"egrave;"##, r##"è"##),
    (r##"egs;"##, r##"⪖"##),
    (r##"egsdot;"##, r##"⪘"##),
    (r##"el;"##, r##"⪙"##),
    (r##"Element;"##, r##"∈"##),
    (r##"elinters;"##, r##"⏧"##),
    (r##"ell;"##, r##"ℓ"##),
    (r##"els;"##, r##"⪕"##),
    (r##"elsdot;"##, r##"⪗"##),
    (r##"Emacr;"##, r##"Ē"##),
    (r##"emacr;"##, r##"ē"##),
    (r##"empty;"##, r##"∅"##),
    (r##"emptyset;"##, r##"∅"##),
    (r##"EmptySmallSquare;"##, r##"◻"##),
    (r##"emptyv;"##, r##"∅"##),
    (r##"EmptyVerySmallSquare;"##, r##"▫"##),
    (r##"emsp13;"##, r##" "##),
    (r##"emsp14;"##, r##" "##),
    (r##"emsp;"##, r##" "##),
    (r##"ENG;"##, r##"Ŋ"##),
    (r##"eng;"##, r##"ŋ"##),
    (r##"ensp;"##, r##" "##),
    (r##"Eogon;"##, r##"Ę"##),
    (r##"eogon;"##, r##"ę"##),
    (r##"Eopf;"##, r##"𝔼"##),
    (r##"eopf;"##, r##"𝕖"##),
    (r##"epar;"##, r##"⋕"##),
    (r##"eparsl;"##, r##"⧣"##),
    (r##"eplus;"##, r##"⩱"##),
    (r##"epsi;"##, r##"ε"##),
    (r##"Epsilon;"##, r##"Ε"##),
    (r##"epsilon;"##, r##"ε"##),
    (r##"epsiv;"##, r##"ϵ"##),
    (r##"eqcirc;"##, r##"≖"##),
    (r##"eqcolon;"##, r##"≕"##),
    (r##"eqsim;"##, r##"≂"##),
    (r##"eqslantgtr;"##, r##"⪖"##),
    (r##"eqslantless;"##, r##"⪕"##),
    (r##"Equal;"##, r##"⩵"##),
    (r##"equals;"##, r##"="##),
    (r##"EqualTilde;"##, r##"≂"##),
    (r##"equest;"##, r##"≟"##),
    (r##"Equilibrium;"##, r##"⇌"##),
    (r##"equiv;"##, r##"≡"##),
    (r##"equivDD;"##, r##"⩸"##),
    (r##"eqvparsl;"##, r##"⧥"##),
    (r##"erarr;"##, r##"⥱"##),
    (r##"erDot;"##, r##"≓"##),
    (r##"Escr;"##, r##"ℰ"##),
    (r##"escr;"##, r##"ℯ"##),
    (r##"esdot;"##, r##"≐"##),
    (r##"Esim;"##, r##"⩳"##),
    (r##"esim;"##, r##"≂"##),
    (r##"Eta;"##, r##"Η"##),
    (r##"eta;"##, r##"η"##),
    (r##"ETH"##, r##"Ð"##),
    (r##"eth"##, r##"ð"##),
    (r##"ETH;"##, r##"Ð"##),
    (r##"eth;"##, r##"ð"##),
    (r##"Euml"##, r##"Ë"##),
    (r##"euml"##, r##"ë"##),
    (r##"Euml;"##, r##"Ë"##),
    (r##"euml;"##, r##"ë"##),
    (r##"euro;"##, r##"€"##),
    (r##"excl;"##, r##"!"##),
    (r##"exist;"##, r##"∃"##),
    (r##"Exists;"##, r##"∃"##),
    (r##"expectation;"##, r##"ℰ"##),
    (r##"ExponentialE;"##, r##"ⅇ"##),
    (r##"exponentiale;"##, r##"ⅇ"##),
    (r##"fallingdotseq;"##, r##"≒"##),
    (r##"Fcy;"##, r##"Ф"##),
    (r##"fcy;"##, r##"ф"##),
    (r##"female;"##, r##"♀"##),
    (r##"ffilig;"##, r##"ﬃ"##),
    (r##"fflig;"##, r##"ﬀ"##),
    (r##"ffllig;"##, r##"ﬄ"##),
    (r##"Ffr;"##, r##"𝔉"##),
    (r##"ffr;"##, r##"𝔣"##),
    (r##"filig;"##, r##"ﬁ"##),
    (r##"FilledSmallSquare;"##, r##"◼"##),
    (r##"FilledVerySmallSquare;"##, r##"▪"##),
    (r##"fjlig;"##, r##"fj"##),
    (r##"flat;"##, r##"♭"##),
    (r##"fllig;"##, r##"ﬂ"##),
    (r##"fltns;"##, r##"▱"##),
    (r##"fnof;"##, r##"ƒ"##),
    (r##"Fopf;"##, r##"𝔽"##),
    (r##"fopf;"##, r##"𝕗"##),
    (r##"ForAll;"##, r##"∀"##),
    (r##"forall;"##, r##"∀"##),
    (r##"fork;"##, r##"⋔"##),
    (r##"forkv;"##, r##"⫙"##),
    (r##"Fouriertrf;"##, r##"ℱ"##),
    (r##"fpartint;"##, r##"⨍"##),
    (r##"frac12"##, r##"½"##),
    (r##"frac12;"##, r##"½"##),
    (r##"frac13;"##, r##"⅓"##),
    (r##"frac14"##, r##"¼"##),
    (r##"frac14;"##, r##"¼"##),
    (r##"frac15;"##, r##"⅕"##),
    (r##"frac16;"##, r##"⅙"##),
    (r##"frac18;"##, r##"⅛"##),
    (r##"frac23;"##, r##"⅔"##),
    (r##"frac25;"##, r##"⅖"##),
    (r##"frac34"##, r##"¾"##),
    (r##"frac34;"##, r##"¾"##),
    (r##"frac35;"##, r##"⅗"##),
    (r##"frac38;"##, r##"⅜"##),
    (r##"frac45;"##, r##"⅘"##),
    (r##"frac56;"##, r##"⅚"##),
    (r##"frac58;"##, r##"⅝"##),
    (r##"frac78;"##, r##"⅞"##),
    (r##"frasl;"##, r##"⁄"##),
    (r##"frown;"##, r##"⌢"##),
    (r##"Fscr;"##, r##"ℱ"##),
    (r##"fscr;"##, r##"𝒻"##),
    (r##"gacute;"##, r##"ǵ"##),
    (r##"Gamma;"##, r##"Γ"##),
    (r##"gamma;"##, r##"γ"##),
    (r##"Gammad;"##, r##"Ϝ"##),
    (r##"gammad;"##, r##"ϝ"##),
    (r##"gap;"##, r##"⪆"##),
    (r##"Gbreve;"##, r##"Ğ"##),
    (r##"gbreve;"##, r##"ğ"##),
    (r##"Gcedil;"##, r##"Ģ"##),
    (r##"Gcirc;"##, r##"Ĝ"##),
    (r##"gcirc;"##, r##"ĝ"##),
    (r##"Gcy;"##, r##"Г"##),
    (r##"gcy;"##, r##"г"##),
    (r##"Gdot;"##, r##"Ġ"##),
    (r##"gdot;"##, r##"ġ"##),
    (r##"gE;"##, r##"≧"##),
    (r##"ge;"##, r##"≥"##),
    (r##"gEl;"##, r##"⪌"##),
    (r##"gel;"##, r##"⋛"##),
    (r##"geq;"##, r##"≥"##),
    (r##"geqq;"##, r##"≧"##),
    (r##"geqslant;"##, r##"⩾"##),
    (r##"ges;"##, r##"⩾"##),
    (r##"gescc;"##, r##"⪩"##),
    (r##"gesdot;"##, r##"⪀"##),
    (r##"gesdoto;"##, r##"⪂"##),
    (r##"gesdotol;"##, r##"⪄"##),
    (r##"gesl;"##, r##"⋛︀"##),
    (r##"gesles;"##, r##"⪔"##),
    (r##"Gfr;"##, r##"𝔊"##),
    (r##"gfr;"##, r##"𝔤"##),
    (r##"Gg;"##, r##"⋙"##),
    (r##"gg;"##, r##"≫"##),
    (r##"ggg;"##, r##"⋙"##),
    (r##"gimel;"##, r##"ℷ"##),
    (r##"GJcy;"##, r##"Ѓ"##),
    (r##"gjcy;"##, r##"ѓ"##),
    (r##"gl;"##, r##"≷"##),
    (r##"gla;"##, r##"⪥"##),
    (r##"glE;"##, r##"⪒"##),
    (r##"glj;"##, r##"⪤"##),
    (r##"gnap;"##, r##"⪊"##),
    (r##"gnapprox;"##, r##"⪊"##),
    (r##"gnE;"##, r##"≩"##),
    (r##"gne;"##, r##"⪈"##),
    (r##"gneq;"##, r##"⪈"##),
    (r##"gneqq;"##, r##"≩"##),
    (r##"gnsim;"##, r##"⋧"##),
    (r##"Gopf;"##, r##"𝔾"##),
    (r##"gopf;"##, r##"𝕘"##),
    (r##"grave;"##, r##"`"##),
    (r##"GreaterEqual;"##, r##"≥"##),
    (r##"GreaterEqualLess;"##, r##"⋛"##),
    (r##"GreaterFullEqual;"##, r##"≧"##),
    (r##"GreaterGreater;"##, r##"⪢"##),
    (r##"GreaterLess;"##, r##"≷"##),
    (r##"GreaterSlantEqual;"##, r##"⩾"##),
    (r##"GreaterTilde;"##, r##"≳"##),
    (r##"Gscr;"##, r##"𝒢"##),
    (r##"gscr;"##, r##"ℊ"##),
    (r##"gsim;"##, r##"≳"##),
    (r##"gsime;"##, r##"⪎"##),
    (r##"gsiml;"##, r##"⪐"##),
    (r##"GT"##, r##">"##),
    (r##"gt"##, r##">"##),
    (r##"GT;"##, r##">"##),
    (r##"Gt;"##, r##"≫"##),
    (r##"gt;"##, r##">"##),
    (r##"gtcc;"##, r##"⪧"##),
    (r##"gtcir;"##, r##"⩺"##),
    (r##"gtdot;"##, r##"⋗"##),
    (r##"gtlPar;"##, r##"⦕"##),
    (r##"gtquest;"##, r##"⩼"##),
    (r##"gtrapprox;"##, r##"⪆"##),
    (r##"gtrarr;"##, r##"⥸"##),
    (r##"gtrdot;"##, r##"⋗"##),
    (r##"gtreqless;"##, r##"⋛"##),
    (r##"gtreqqless;"##, r##"⪌"##),
    (r##"gtrless;"##, r##"≷"##),
    (r##"gtrsim;"##, r##"≳"##),
    (r##"gvertneqq;"##, r##"≩︀"##),
    (r##"gvnE;"##, r##"≩︀"##),
    (r##"Hacek;"##, r##"ˇ"##),
    (r##"hairsp;"##, r##" "##),
    (r##"half;"##, r##"½"##),
    (r##"hamilt;"##, r##"ℋ"##),
    (r##"HARDcy;"##, r##"Ъ"##),
    (r##"hardcy;"##, r##"ъ"##),
    (r##"hArr;"##, r##"⇔"##),
    (r##"harr;"##, r##"↔"##),
    (r##"harrcir;"##, r##"⥈"##),
    (r##"harrw;"##, r##"↭"##),
    (r##"Hat;"##, r##"^"##),
    (r##"hbar;"##, r##"ℏ"##),
    (r##"Hcirc;"##, r##"Ĥ"##),
    (r##"hcirc;"##, r##"ĥ"##),
    (r##"hearts;"##, r##"♥"##),
    (r##"heartsuit;"##, r##"♥"##),
    (r##"hellip;"##, r##"…"##),
    (r##"hercon;"##, r##"⊹"##),
    (r##"Hfr;"##, r##"ℌ"##),
    (r##"hfr;"##, r##"𝔥"##),
    (r##"HilbertSpace;"##, r##"ℋ"##),
    (r##"hksearow;"##, r##"⤥"##),
    (r##"hkswarow;"##, r##"⤦"##),
    (r##"hoarr;"##, r##"⇿"##),
    (r##"homtht;"##, r##"∻"##),
    (r##"hookleftarrow;"##, r##"↩"##),
    (r##"hookrightarrow;"##, r##"↪"##),
    (r##"Hopf;"##, r##"ℍ"##),
    (r##"hopf;"##, r##"𝕙"##),
    (r##"horbar;"##, r##"―"##),
    (r##"HorizontalLine;"##, r##"─"##),
    (r##"Hscr;"##, r##"ℋ"##),
    (r##"hscr;"##, r##"𝒽"##),
    (r##"hslash;"##, r##"ℏ"##),
    (r##"Hstrok;"##, r##"Ħ"##),
    (r##"hstrok;"##, r##"ħ"##),
    (r##"HumpDownHump;"##, r##"≎"##),
    (r##"HumpEqual;"##, r##"≏"##),
    (r##"hybull;"##, r##"⁃"##),
    (r##"hyphen;"##, r##"‐"##),
    (r##"Iacute"##, r##"Í"##),
    (r##"iacute"##, r##"í"##),
    (r##"Iacute;"##, r##"Í"##),
    (r##"iacute;"##, r##"í"##),
    (r##"ic;"##, r##"⁣"##),
    (r##"Icirc"##, r##"Î"##),
    (r##"icirc"##, r##"î"##),
    (r##"Icirc;"##, r##"Î"##),
    (r##"icirc;"##, r##"î"##),
    (r##"Icy;"##, r##"И"##),
    (r##"icy;"##, r##"и"##),
    (r##"Idot;"##, r##"İ"##),
    (r##"IEcy;"##, r##"Е"##),
    (r##"iecy;"##, r##"е"##),
    (r##"iexcl"##, r##"¡"##),
    (r##"iexcl;"##, r##"¡"##),
    (r##"iff;"##, r##"⇔"##),
    (r##"Ifr;"##, r##"ℑ"##),
    (r##"ifr;"##, r##"𝔦"##),
    (r##"Igrave"##, r##"Ì"##),
    (r##"igrave"##, r##"ì"##),
    (r##"Igrave;"##, r##"Ì"##),
    (r##"igrave;"##, r##"ì"##),
    (r##"ii;"##, r##"ⅈ"##),
    (r##"iiiint;"##, r##"⨌"##),
    (r##"iiint;"##, r##"∭"##),
    (r##"iinfin;"##, r##"⧜"##),
    (r##"iiota;"##, r##"℩"##),
    (r##"IJlig;"##, r##"Ĳ"##),
    (r##"ijlig;"##, r##"ĳ"##),
    (r##"Im;"##, r##"ℑ"##),
    (r##"Imacr;"##, r##"Ī"##),
    (r##"imacr;"##, r##"ī"##),
    (r##"image;"##, r##"ℑ"##),
    (r##"ImaginaryI;"##, r##"ⅈ"##),
    (r##"imagline;"##, r##"ℐ"##),
    (r##"imagpart;"##, r##"ℑ"##),
    (r##"imath;"##, r##"ı"##),
    (r##"imof;"##, r##"⊷"##),
    (r##"imped;"##, r##"Ƶ"##),
    (r##"Implies;"##, r##"⇒"##),
    (r##"in;"##, r##"∈"##),
    (r##"incare;"##, r##"℅"##),
    (r##"infin;"##, r##"∞"##),
    (r##"infintie;"##, r##"⧝"##),
    (r##"inodot;"##, r##"ı"##),
    (r##"Int;"##, r##"∬"##),
    (r##"int;"##, r##"∫"##),
    (r##"intcal;"##, r##"⊺"##),
    (r##"integers;"##, r##"ℤ"##),
    (r##"Integral;"##, r##"∫"##),
    (r##"intercal;"##, r##"⊺"##),
    (r##"Intersection;"##, r##"⋂"##),
    (r##"intlarhk;"##, r##"⨗"##),
    (r##"intprod;"##, r##"⨼"##),
    (r##"InvisibleComma;"##, r##"⁣"##),
    (r##"InvisibleTimes;"##, r##"⁢"##),
    (r##"IOcy;"##, r##"Ё"##),
    (r##"iocy;"##, r##"ё"##),
    (r##"Iogon;"##, r##"Į"##),
    (r##"iogon;"##, r##"į"##),
    (r##"Iopf;"##, r##"𝕀"##),
    (r##"iopf;"##, r##"𝕚"##),
    (r##"Iota;"##, r##"Ι"##),
    (r##"iota;"##, r##"ι"##),
    (r##"iprod;"##, r##"⨼"##),
    (r##"iquest"##, r##"¿"##),
    (r##"iquest;"##, r##"¿"##),
    (r##"Iscr;"##, r##"ℐ"##),
    (r##"iscr;"##, r##"𝒾"##),
    (r##"isin;"##, r##"∈"##),
    (r##"isindot;"##, r##"⋵"##),
    (r##"isinE;"##, r##"⋹"##),
    (r##"isins;"##, r##"⋴"##),
    (r##"isinsv;"##, r##"⋳"##),
    (r##"isinv;"##, r##"∈"##),
    (r##"it;"##, r##"⁢"##),
    (r##"Itilde;"##, r##"Ĩ"##),
    (r##"itilde;"##, r##"ĩ"##),
    (r##"Iukcy;"##, r##"І"##),
    (r##"iukcy;"##, r##"і"##),
    (r##"Iuml"##, r##"Ï"##),
    (r##"iuml"##, r##"ï"##),
    (r##"Iuml;"##, r##"Ï"##),
    (r##"iuml;"##, r##"ï"##),
    (r##"Jcirc;"##, r##"Ĵ"##),
    (r##"jcirc;"##, r##"ĵ"##),
    (r##"Jcy;"##, r##"Й"##),
    (r##"jcy;"##, r##"й"##),
    (r##"Jfr;"##, r##"𝔍"##),
    (r##"jfr;"##, r##"𝔧"##),
    (r##"jmath;"##, r##"ȷ"##),
    (r##"Jopf;"##, r##"𝕁"##),
    (r##"jopf;"##, r##"𝕛"##),
    (r##"Jscr;"##, r##"𝒥"##),
    (r##"jscr;"##, r##"𝒿"##),
    (r##"Jsercy;"##, r##"Ј"##),
    (r##"jsercy;"##, r##"ј"##),
    (r##"Jukcy;"##, r##"Є"##),
    (r##"jukcy;"##, r##"є"##),
    (r##"Kappa;"##, r##"Κ"##),
    (r##"kappa;"##, r##"κ"##),
    (r##"kappav;"##, r##"ϰ"##),
    (r##"Kcedil;"##, r##"Ķ"##),
    (r##"kcedil;"##, r##"ķ"##),
    (r##"Kcy;"##, r##"К"##),
    (r##"kcy;"##, r##"к"##),
    (r##"Kfr;"##, r##"𝔎"##),
    (r##"kfr;"##, r##"𝔨"##),
    (r##"kgreen;"##, r##"ĸ"##),
    (r##"KHcy;"##, r##"Х"##),
    (r##"khcy;"##, r##"х"##),
    (r##"KJcy;"##, r##"Ќ"##),
    (r##"kjcy;"##, r##"ќ"##),
    (r##"Kopf;"##, r##"𝕂"##),
    (r##"kopf;"##, r##"𝕜"##),
    (r##"Kscr;"##, r##"𝒦"##),
    (r##"kscr;"##, r##"𝓀"##),
    (r##"lAarr;"##, r##"⇚"##),
    (r##"Lacute;"##, r##"Ĺ"##),
    (r##"lacute;"##, r##"ĺ"##),
    (r##"laemptyv;"##, r##"⦴"##),
    (r##"lagran;"##, r##"ℒ"##),
    (r##"Lambda;"##, r##"Λ"##),
    (r##"lambda;"##, r##"λ"##),
    (r##"Lang;"##, r##"⟪"##),
    (r##"lang;"##, r##"⟨"##),
    (r##"langd;"##, r##"⦑"##),
    (r##"langle;"##, r##"⟨"##),
    (r##"lap;"##, r##"⪅"##),
    (r##"Laplacetrf;"##, r##"ℒ"##),
    (r##"laquo"##, r##"«"##),
    (r##"laquo;"##, r##"«"##),
    (r##"Larr;"##, r##"↞"##),
    (r##"lArr;"##, r##"⇐"##),
    (r##"larr;"##, r##"←"##),
    (r##"larrb;"##, r##"⇤"##),
    (r##"larrbfs;"##, r##"⤟"##),
    (r##"larrfs;"##, r##"⤝"##),
    (r##"larrhk;"##, r##"↩"##),
    (r##"larrlp;"##, r##"↫"##),
    (r##"larrpl;"##, r##"⤹"##),
    (r##"larrsim;"##, r##"⥳"##),
    (r##"larrtl;"##, r##"↢"##),
    (r##"lat;"##, r##"⪫"##),
    (r##"lAtail;"##, r##"⤛"##),
    (r##"latail;"##, r##"⤙"##),
    (r##"late;"##, r##"⪭"##),
    (r##"lates;"##, r##"⪭︀"##),
    (r##"lBarr;"##, r##"⤎"##),
    (r##"lbarr;"##, r##"⤌"##),
    (r##"lbbrk;"##, r##"❲"##),
    (r##"lbrace;"##, r##"{"##),
    (r##"lbrack;"##, r##"["##),
    (r##"lbrke;"##, r##"⦋"##),
    (r##"lbrksld;"##, r##"⦏"##),
    (r##"lbrkslu;"##, r##"⦍"##),
    (r##"Lcaron;"##, r##"Ľ"##),
    (r##"lcaron;"##, r##"ľ"##),
    (r##"Lcedil;"##, r##"Ļ"##),
    (r##"lcedil;"##, r##"ļ"##),
    (r##"lceil;"##, r##"⌈"##),
    (r##"lcub;"##, r##"{"##),
    (r##"Lcy;"##, r##"Л"##),
    (r##"lcy;"##, r##"л"##),
    (r##"ldca;"##, r##"⤶"##),
    (r##"ldquo;"##, r##"“"##),
    (r##"ldquor;"##, r##"„"##),
    (r##"ldrdhar;"##, r##"⥧"##),
    (r##"ldrushar;"##, r##"⥋"##),
    (r##"ldsh;"##, r##"↲"##),
    (r##"lE;"##, r##"≦"##),
    (r##"le;"##, r##"≤"##),
    (r##"LeftAngleBracket;"##, r##"⟨"##),
    (r##"LeftArrow;"##, r##"←"##),
    (r##"Leftarrow;"##, r##"⇐"##),
    (r##"leftarrow;"##, r##"←"##),
    (r##"LeftArrowBar;"##, r##"⇤"##),
    (r##"LeftArrowRightArrow;"##, r##"⇆"##),
    (r##"leftarrowtail;"##, r##"↢"##),
    (r##"LeftCeiling;"##, r##"⌈"##),
    (r##"LeftDoubleBracket;"##, r##"⟦"##),
    (r##"LeftDownTeeVector;"##, r##"⥡"##),
    (r##"LeftDownVector;"##, r##"⇃"##),
    (r##"LeftDownVectorBar;"##, r##"⥙"##),
    (r##"LeftFloor;"##, r##"⌊"##),
    (r##"leftharpoondown;"##, r##"↽"##),
    (r##"leftharpoonup;"##, r##"↼"##),
    (r##"leftleftarrows;"##, r##"⇇"##),
    (r##"LeftRightArrow;"##, r##"↔"##),
    (r##"Leftrightarrow;"##, r##"⇔"##),
    (r##"leftrightarrow;"##, r##"↔"##),
    (r##"leftrightarrows;"##, r##"⇆"##),
    (r##"leftrightharpoons;"##, r##"⇋"##),
    (r##"leftrightsquigarrow;"##, r##"↭"##),
    (r##"LeftRightVector;"##, r##"⥎"##),
    (r##"LeftTee;"##, r##"⊣"##),
    (r##"LeftTeeArrow;"##, r##"↤"##),
    (r##"LeftTeeVector;"##, r##"⥚"##),
    (r##"leftthreetimes;"##, r##"⋋"##),
    (r##"LeftTriangle;"##, r##"⊲"##),
    (r##"LeftTriangleBar;"##, r##"⧏"##),
    (r##"LeftTriangleEqual;"##, r##"⊴"##),
    (r##"LeftUpDownVector;"##, r##"⥑"##),
    (r##"LeftUpTeeVector;"##, r##"⥠"##),
    (r##"LeftUpVector;"##, r##"↿"##),
    (r##"LeftUpVectorBar;"##, r##"⥘"##),
    (r##"LeftVector;"##, r##"↼"##),
    (r##"LeftVectorBar;"##, r##"⥒"##),
    (r##"lEg;"##, r##"⪋"##),
    (r##"leg;"##, r##"⋚"##),
    (r##"leq;"##, r##"≤"##),
    (r##"leqq;"##, r##"≦"##),
    (r##"leqslant;"##, r##"⩽"##),
    (r##"les;"##, r##"⩽"##),
    (r##"lescc;"##, r##"⪨"##),
    (r##"lesdot;"##, r##"⩿"##),
    (r##"lesdoto;"##, r##"⪁"##),
    (r##"lesdotor;"##, r##"⪃"##),
    (r##"lesg;"##, r##"⋚︀"##),
    (r##"lesges;"##, r##"⪓"##),
    (r##"lessapprox;"##, r##"⪅"##),
    (r##"lessdot;"##, r##"⋖"##),
    (r##"lesseqgtr;"##, r##"⋚"##),
    (r##"lesseqqgtr;"##, r##"⪋"##),
    (r##"LessEqualGreater;"##, r##"⋚"##),
    (r##"LessFullEqual;"##, r##"≦"##),
    (r##"LessGreater;"##, r##"≶"##),
    (r##"lessgtr;"##, r##"≶"##),
    (r##"LessLess;"##, r##"⪡"##),
    (r##"lesssim;"##, r##"≲"##),
    (r##"LessSlantEqual;"##, r##"⩽"##),
    (r##"LessTilde;"##, r##"≲"##),
    (r##"lfisht;"##, r##"⥼"##),
    (r##"lfloor;"##, r##"⌊"##),
    (r##"Lfr;"##, r##"𝔏"##),
    (r##"lfr;"##, r##"𝔩"##),
    (r##"lg;"##, r##"≶"##),
    (r##"lgE;"##, r##"⪑"##),
    (r##"lHar;"##, r##"⥢"##),
    (r##"lhard;"##, r##"↽"##),
    (r##"lharu;"##, r##"↼"##),
    (r##"lharul;"##, r##"⥪"##),
    (r##"lhblk;"##, r##"▄"##),
    (r##"LJcy;"##, r##"Љ"##),
    (r##"ljcy;"##, r##"љ"##),
    (r##"Ll;"##, r##"⋘"##),
    (r##"ll;"##, r##"≪"##),
    (r##"llarr;"##, r##"⇇"##),
    (r##"llcorner;"##, r##"⌞"##),
    (r##"Lleftarrow;"##, r##"⇚"##),
    (r##"llhard;"##, r##"⥫"##),
    (r##"lltri;"##, r##"◺"##),
    (r##"Lmidot;"##, r##"Ŀ"##),
    (r##"lmidot;"##, r##"ŀ"##),
    (r##"lmoust;"##, r##"⎰"##),
    (r##"lmoustache;"##, r##"⎰"##),
    (r##"lnap;"##, r##"⪉"##),
    (r##"lnapprox;"##, r##"⪉"##),
    (r##"lnE;"##, r##"≨"##),
    (r##"lne;"##, r##"⪇"##),
    (r##"lneq;"##, r##"⪇"##),
    (r##"lneqq;"##, r##"≨"##),
    (r##"lnsim;"##, r##"⋦"##),
    (r##"loang;"##, r##"⟬"##),
    (r##"loarr;"##, r##"⇽"##),
    (r##"lobrk;"##, r##"⟦"##),
    (r##"LongLeftArrow;"##, r##"⟵"##),
    (r##"Longleftarrow;"##, r##"⟸"##),
    (r##"longleftarrow;"##, r##"⟵"##),
    (r##"LongLeftRightArrow;"##, r##"⟷"##),
    (r##"Longleftrightarrow;"##, r##"⟺"##),
    (r##"longleftrightarrow;"##, r##"⟷"##),
    (r##"longmapsto;"##, r##"⟼"##),
    (r##"LongRightArrow;"##, r##"⟶"##),
    (r##"Longrightarrow;"##, r##"⟹"##),
    (r##"longrightarrow;"##, r##"⟶"##),
    (r##"looparrowleft;"##, r##"↫"##),
    (r##"looparrowright;"##, r##"↬"##),
    (r##"lopar;"##, r##"⦅"##),
    (r##"Lopf;"##, r##"𝕃"##),
    (r##"lopf;"##, r##"𝕝"##),
    (r##"loplus;"##, r##"⨭"##),
    (r##"lotimes;"##, r##"⨴"##),
    (r##"lowast;"##, r##"∗"##),
    (r##"lowbar;"##, r##"_"##),
    (r##"LowerLeftArrow;"##, r##"↙"##),
    (r##"LowerRightArrow;"##, r##"↘"##),
    (r##"loz;"##, r##"◊"##),
    (r##"lozenge;"##, r##"◊"##),
    (r##"lozf;"##, r##"⧫"##),
    (r##"lpar;"##, r##"("##),
    (r##"lparlt;"##, r##"⦓"##),
    (r##"lrarr;"##, r##"⇆"##),
    (r##"lrcorner;"##, r##"⌟"##),
    (r##"lrhar;"##, r##"⇋"##),
    (r##"lrhard;"##, r##"⥭"##),
    (r##"lrm;"##, r##"‎"##),
    (r##"lrtri;"##, r##"⊿"##),
    (r##"lsaquo;"##, r##"‹"##),
    (r##"Lscr;"##, r##"ℒ"##),
    (r##"lscr;"##, r##"𝓁"##),
    (r##"Lsh;"##, r##"↰"##),
    (r##"lsh;"##, r##"↰"##),
    (r##"lsim;"##, r##"≲"##),
    (r##"lsime;"##, r##"⪍"##),
    (r##"lsimg;"##, r##"⪏"##),
    (r##"lsqb;"##, r##"["##),
    (r##"lsquo;"##, r##"‘"##),
    (r##"lsquor;"##, r##"‚"##),
    (r##"Lstrok;"##, r##"Ł"##),
    (r##"lstrok;"##, r##"ł"##),
    (r##"LT"##, r##"<"##),
    (r##"lt"##, r##"<"##),
    (r##"LT;"##, r##"<"##),
    (r##"Lt;"##, r##"≪"##),
    (r##"lt;"##, r##"<"##),
    (r##"ltcc;"##, r##"⪦"##),
    (r##"ltcir;"##, r##"⩹"##),
    (r##"ltdot;"##, r##"⋖"##),
    (r##"lthree;"##, r##"⋋"##),
    (r##"ltimes;"##, r##"⋉"##),
    (r##"ltlarr;"##, r##"⥶"##),
    (r##"ltquest;"##, r##"⩻"##),
    (r##"ltri;"##, r##"◃"##),
    (r##"ltrie;"##, r##"⊴"##),
    (r##"ltrif;"##, r##"◂"##),
    (r##"ltrPar;"##, r##"⦖"##),
    (r##"lurdshar;"##, r##"⥊"##),
    (r##"luruhar;"##, r##"⥦"##),
    (r##"lvertneqq;"##, r##"≨︀"##),
    (r##"lvnE;"##, r##"≨︀"##),
    (r##"macr"##, r##"¯"##),
    (r##"macr;"##, r##"¯"##),
    (r##"male;"##, r##"♂"##),
    (r##"malt;"##, r##"✠"##),
    (r##"maltese;"##, r##"✠"##),
    (r##"Map;"##, r##"⤅"##),
    (r##"map;"##, r##"↦"##),
    (r##"mapsto;"##, r##"↦"##),
    (r##"mapstodown;"##, r##"↧"##),
    (r##"mapstoleft;"##, r##"↤"##),
    (r##"mapstoup;"##, r##"↥"##),
    (r##"marker;"##, r##"▮"##),
    (r##"mcomma;"##, r##"⨩"##),
    (r##"Mcy;"##, r##"М"##),
    (r##"mcy;"##, r##"м"##),
    (r##"mdash;"##, r##"—"##),
    (r##"mDDot;"##, r##"∺"##),
    (r##"measuredangle;"##, r##"∡"##),
    (r##"MediumSpace;"##, r##" "##),
    (r##"Mellintrf;"##, r##"ℳ"##),
    (r##"Mfr;"##, r##"𝔐"##),
    (r##"mfr;"##, r##"𝔪"##),
    (r##"mho;"##, r##"℧"##),
    (r##"micro"##, r##"µ"##),
    (r##"micro;"##, r##"µ"##),
    (r##"mid;"##, r##"∣"##),
    (r##"midast;"##, r##"*"##),
    (r##"midcir;"##, r##"⫰"##),
    (r##"middot"##, r##"·"##),
    (r##"middot;"##, r##"·"##),
    (r##"minus;"##, r##"−"##),
    (r##"minusb;"##, r##"⊟"##),
    (r##"minusd;"##, r##"∸"##),
    (r##"minusdu;"##, r##"⨪"##),
    (r##"MinusPlus;"##, r##"∓"##),
    (r##"mlcp;"##, r##"⫛"##),
    (r##"mldr;"##, r##"…"##),
    (r##"mnplus;"##, r##"∓"##),
    (r##"models;"##, r##"⊧"##),
    (r##"Mopf;"##, r##"𝕄"##),
    (r##"mopf;"##, r##"𝕞"##),
    (r##"mp;"##, r##"∓"##),
    (r##"Mscr;"##, r##"ℳ"##),
    (r##"mscr;"##, r##"𝓂"##),
    (r##"mstpos;"##, r##"∾"##),
    (r##"Mu;"##, r##"Μ"##),
    (r##"mu;"##, r##"μ"##),
    (r##"multimap;"##, r##"⊸"##),
    (r##"mumap;"##, r##"⊸"##),
    (r##"nabla;"##, r##"∇"##),
    (r##"Nacute;"##, r##"Ń"##),
    (r##"nacute;"##, r##"ń"##),
    (r##"nang;"##, r##"∠⃒"##),
    (r##"nap;"##, r##"≉"##),
    (r##"napE;"##, r##"⩰̸"##),
    (r##"napid;"##, r##"≋̸"##),
    (r##"napos;"##, r##"ŉ"##),
    (r##"napprox;"##, r##"≉"##),
    (r##"natur;"##, r##"♮"##),
    (r##"natural;"##, r##"♮"##),
    (r##"naturals;"##, r##"ℕ"##),
    (r##"nbsp"##, r##" "##),
    (r##"nbsp;"##, r##" "##),
    (r##"nbump;"##, r##"≎̸"##),
    (r##"nbumpe;"##, r##"≏̸"##),
    (r##"ncap;"##, r##"⩃"##),
    (r##"Ncaron;"##, r##"Ň"##),
    (r##"ncaron;"##, r##"ň"##),
    (r##"Ncedil;"##, r##"Ņ"##),
    (r##"ncedil;"##, r##"ņ"##),
    (r##"ncong;"##, r##"≇"##),
    (r##"ncongdot;"##, r##"⩭̸"##),
    (r##"ncup;"##, r##"⩂"##),
    (r##"Ncy;"##, r##"Н"##),
    (r##"ncy;"##, r##"н"##),
    (r##"ndash;"##, r##"–"##),
    (r##"ne;"##, r##"≠"##),
    (r##"nearhk;"##, r##"⤤"##),
    (r##"neArr;"##, r##"⇗"##),
    (r##"nearr;"##, r##"↗"##),
    (r##"nearrow;"##, r##"↗"##),
    (r##"nedot;"##, r##"≐̸"##),
    (r##"NegativeMediumSpace;"##, r##"​"##),
    (r##"NegativeThickSpace;"##, r##"​"##),
    (r##"NegativeThinSpace;"##, r##"​"##),
    (r##"NegativeVeryThinSpace;"##, r##"​"##),
    (r##"nequiv;"##, r##"≢"##),
    (r##"nesear;"##, r##"⤨"##),
    (r##"nesim;"##, r##"≂̸"##),
    (r##"NestedGreaterGreater;"##, r##"≫"##),
    (r##"NestedLessLess;"##, r##"≪"##),
    (
        r##"NewLine;"##,
        r##"
"##,
    ),
    (r##"nexist;"##, r##"∄"##),
    (r##"nexists;"##, r##"∄"##),
    (r##"Nfr;"##, r##"𝔑"##),
    (r##"nfr;"##, r##"𝔫"##),
    (r##"ngE;"##, r##"≧̸"##),
    (r##"nge;"##, r##"≱"##),
    (r##"ngeq;"##, r##"≱"##),
    (r##"ngeqq;"##, r##"≧̸"##),
    (r##"ngeqslant;"##, r##"⩾̸"##),
    (r##"nges;"##, r##"⩾̸"##),
    (r##"nGg;"##, r##"⋙̸"##),
    (r##"ngsim;"##, r##"≵"##),
    (r##"nGt;"##, r##"≫⃒"##),
    (r##"ngt;"##, r##"≯"##),
    (r##"ngtr;"##, r##"≯"##),
    (r##"nGtv;"##, r##"≫̸"##),
    (r##"nhArr;"##, r##"⇎"##),
    (r##"nharr;"##, r##"↮"##),
    (r##"nhpar;"##, r##"⫲"##),
    (r##"ni;"##, r##"∋"##),
    (r##"nis;"##, r##"⋼"##),
    (r##"nisd;"##, r##"⋺"##),
    (r##"niv;"##, r##"∋"##),
    (r##"NJcy;"##, r##"Њ"##),
    (r##"njcy;"##, r##"њ"##),
    (r##"nlArr;"##, r##"⇍"##),
    (r##"nlarr;"##, r##"↚"##),
    (r##"nldr;"##, r##"‥"##),
    (r##"nlE;"##, r##"≦̸"##),
    (r##"nle;"##, r##"≰"##),
    (r##"nLeftarrow;"##, r##"⇍"##),
    (r##"nleftarrow;"##, r##"↚"##),
    (r##"nLeftrightarrow;"##, r##"⇎"##),
    (r##"nleftrightarrow;"##, r##"↮"##),
    (r##"nleq;"##, r##"≰"##),
    (r##"nleqq;"##, r##"≦̸"##),
    (r##"nleqslant;"##, r##"⩽̸"##),
    (r##"nles;"##, r##"⩽̸"##),
    (r##"nless;"##, r##"≮"##),
    (r##"nLl;"##, r##"⋘̸"##),
    (r##"nlsim;"##, r##"≴"##),
    (r##"nLt;"##, r##"≪⃒"##),
    (r##"nlt;"##, r##"≮"##),
    (r##"nltri;"##, r##"⋪"##),
    (r##"nltrie;"##, r##"⋬"##),
    (r##"nLtv;"##, r##"≪̸"##),
    (r##"nmid;"##, r##"∤"##),
    (r##"NoBreak;"##, r##"⁠"##),
    (r##"NonBreakingSpace;"##, r##" "##),
    (r##"Nopf;"##, r##"ℕ"##),
    (r##"nopf;"##, r##"𝕟"##),
    (r##"not"##, r##"¬"##),
    (r##"Not;"##, r##"⫬"##),
    (r##"not;"##, r##"¬"##),
    (r##"NotCongruent;"##, r##"≢"##),
    (r##"NotCupCap;"##, r##"≭"##),
    (r##"NotDoubleVerticalBar;"##, r##"∦"##),
    (r##"NotElement;"##, r##"∉"##),
    (r##"NotEqual;"##, r##"≠"##),
    (r##"NotEqualTilde;"##, r##"≂̸"##),
    (r##"NotExists;"##, r##"∄"##),
    (r##"NotGreater;"##, r##"≯"##),
    (r##"NotGreaterEqual;"##, r##"≱"##),
    (r##"NotGreaterFullEqual;"##, r##"≧̸"##),
    (r##"NotGreaterGreater;"##, r##"≫̸"##),
    (r##"NotGreaterLess;"##, r##"≹"##),
    (r##"NotGreaterSlantEqual;"##, r##"⩾̸"##),
    (r##"NotGreaterTilde;"##, r##"≵"##),
    (r##"NotHumpDownHump;"##, r##"≎̸"##),
    (r##"NotHumpEqual;"##, r##"≏̸"##),
    (r##"notin;"##, r##"∉"##),
    (r##"notindot;"##, r##"⋵̸"##),
    (r##"notinE;"##, r##"⋹̸"##),
    (r##"notinva;"##, r##"∉"##),
    (r##"notinvb;"##, r##"⋷"##),
    (r##"notinvc;"##, r##"⋶"##),
    (r##"NotLeftTriangle;"##, r##"⋪"##),
    (r##"NotLeftTriangleBar;"##, r##"⧏̸"##),
    (r##"NotLeftTriangleEqual;"##, r##"⋬"##),
    (r##"NotLess;"##, r##"≮"##),
    (r##"NotLessEqual;"##, r##"≰"##),
    (r##"NotLessGreater;"##, r##"≸"##),
    (r##"NotLessLess;"##, r##"≪̸"##),
    (r##"NotLessSlantEqual;"##, r##"⩽̸"##),
    (r##"NotLessTilde;"##, r##"≴"##),
    (r##"NotNestedGreaterGreater;"##, r##"⪢̸"##),
    (r##"NotNestedLessLess;"##, r##"⪡̸"##),
    (r##"notni;"##, r##"∌"##),
    (r##"notniva;"##, r##"∌"##),
    (r##"notnivb;"##, r##"⋾"##),
    (r##"notnivc;"##, r##"⋽"##),
    (r##"NotPrecedes;"##, r##"⊀"##),
    (r##"NotPrecedesEqual;"##, r##"⪯̸"##),
    (r##"NotPrecedesSlantEqual;"##, r##"⋠"##),
    (r##"NotReverseElement;"##, r##"∌"##),
    (r##"NotRightTriangle;"##, r##"⋫"##),
    (r##"NotRightTriangleBar;"##, r##"⧐̸"##),
    (r##"NotRightTriangleEqual;"##, r##"⋭"##),
    (r##"NotSquareSubset;"##, r##"⊏̸"##),
    (r##"NotSquareSubsetEqual;"##, r##"⋢"##),
    (r##"NotSquareSuperset;"##, r##"⊐̸"##),
    (r##"NotSquareSupersetEqual;"##, r##"⋣"##),
    (r##"NotSubset;"##, r##"⊂⃒"##),
    (r##"NotSubsetEqual;"##, r##"⊈"##),
    (r##"NotSucceeds;"##, r##"⊁"##),
    (r##"NotSucceedsEqual;"##, r##"⪰̸"##),
    (r##"NotSucceedsSlantEqual;"##, r##"⋡"##),
    (r##"NotSucceedsTilde;"##, r##"≿̸"##),
    (r##"NotSuperset;"##, r##"⊃⃒"##),
    (r##"NotSupersetEqual;"##, r##"⊉"##),
    (r##"NotTilde;"##, r##"≁"##),
    (r##"NotTildeEqual;"##, r##"≄"##),
    (r##"NotTildeFullEqual;"##, r##"≇"##),
    (r##"NotTildeTilde;"##, r##"≉"##),
    (r##"NotVerticalBar;"##, r##"∤"##),
    (r##"npar;"##, r##"∦"##),
    (r##"nparallel;"##, r##"∦"##),
    (r##"nparsl;"##, r##"⫽⃥"##),
    (r##"npart;"##, r##"∂̸"##),
    (r##"npolint;"##, r##"⨔"##),
    (r##"npr;"##, r##"⊀"##),
    (r##"nprcue;"##, r##"⋠"##),
    (r##"npre;"##, r##"⪯̸"##),
    (r##"nprec;"##, r##"⊀"##),
    (r##"npreceq;"##, r##"⪯̸"##),
    (r##"nrArr;"##, r##"⇏"##),
    (r##"nrarr;"##, r##"↛"##),
    (r##"nrarrc;"##, r##"⤳̸"##),
    (r##"nrarrw;"##, r##"↝̸"##),
    (r##"nRightarrow;"##, r##"⇏"##),
    (r##"nrightarrow;"##, r##"↛"##),
    (r##"nrtri;"##, r##"⋫"##),
    (r##"nrtrie;"##, r##"⋭"##),
    (r##"nsc;"##, r##"⊁"##),
    (r##"nsccue;"##, r##"⋡"##),
    (r##"nsce;"##, r##"⪰̸"##),
    (r##"Nscr;"##, r##"𝒩"##),
    (r##"nscr;"##, r##"𝓃"##),
    (r##"nshortmid;"##, r##"∤"##),
    (r##"nshortparallel;"##, r##"∦"##),
    (r##"nsim;"##, r##"≁"##),
    (r##"nsime;"##, r##"≄"##),
    (r##"nsimeq;"##, r##"≄"##),
    (r##"nsmid;"##, r##"∤"##),
    (r##"nspar;"##, r##"∦"##),
    (r##"nsqsube;"##, r##"⋢"##),
    (r##"nsqsupe;"##, r##"⋣"##),
    (r##"nsub;"##, r##"⊄"##),
    (r##"nsubE;"##, r##"⫅̸"##),
    (r##"nsube;"##, r##"⊈"##),
    (r##"nsubset;"##, r##"⊂⃒"##),
    (r##"nsubseteq;"##, r##"⊈"##),
    (r##"nsubseteqq;"##, r##"⫅̸"##),
    (r##"nsucc;"##, r##"⊁"##),
    (r##"nsucceq;"##, r##"⪰̸"##),
    (r##"nsup;"##, r##"⊅"##),
    (r##"nsupE;"##, r##"⫆̸"##),
    (r##"nsupe;"##, r##"⊉"##),
    (r##"nsupset;"##, r##"⊃⃒"##),
    (r##"nsupseteq;"##, r##"⊉"##),
    (r##"nsupseteqq;"##, r##"⫆̸"##),
    (r##"ntgl;"##, r##"≹"##),
    (r##"Ntilde"##, r##"Ñ"##),
    (r##"ntilde"##, r##"ñ"##),
    (r##"Ntilde;"##, r##"Ñ"##),
    (r##"ntilde;"##, r##"ñ"##),
    (r##"ntlg;"##, r##"≸"##),
    (r##"ntriangleleft;"##, r##"⋪"##),
    (r##"ntrianglelefteq;"##, r##"⋬"##),
    (r##"ntriangleright;"##, r##"⋫"##),
    (r##"ntrianglerighteq;"##, r##"⋭"##),
    (r##"Nu;"##, r##"Ν"##),
    (r##"nu;"##, r##"ν"##),
    (r##"num;"##, r##"#"##),
    (r##"numero;"##, r##"№"##),
    (r##"numsp;"##, r##" "##),
    (r##"nvap;"##, r##"≍⃒"##),
    (r##"nVDash;"##, r##"⊯"##),
    (r##"nVdash;"##, r##"⊮"##),
    (r##"nvDash;"##, r##"⊭"##),
    (r##"nvdash;"##, r##"⊬"##),
    (r##"nvge;"##, r##"≥⃒"##),
    (r##"nvgt;"##, r##">⃒"##),
    (r##"nvHarr;"##, r##"⤄"##),
    (r##"nvinfin;"##, r##"⧞"##),
    (r##"nvlArr;"##, r##"⤂"##),
    (r##"nvle;"##, r##"≤⃒"##),
    (r##"nvlt;"##, r##"<⃒"##),
    (r##"nvltrie;"##, r##"⊴⃒"##),
    (r##"nvrArr;"##, r##"⤃"##),
    (r##"nvrtrie;"##, r##"⊵⃒"##),
    (r##"nvsim;"##, r##"∼⃒"##),
    (r##"nwarhk;"##, r##"⤣"##),
    (r##"nwArr;"##, r##"⇖"##),
    (r##"nwarr;"##, r##"↖"##),
    (r##"nwarrow;"##, r##"↖"##),
    (r##"nwnear;"##, r##"⤧"##),
    (r##"Oacute"##, r##"Ó"##),
    (r##"oacute"##, r##"ó"##),
    (r##"Oacute;"##, r##"Ó"##),
    (r##"oacute;"##, r##"ó"##),
    (r##"oast;"##, r##"⊛"##),
    (r##"ocir;"##, r##"⊚"##),
    (r##"Ocirc"##, r##"Ô"##),
    (r##"ocirc"##, r##"ô"##),
    (r##"Ocirc;"##, r##"Ô"##),
    (r##"ocirc;"##, r##"ô"##),
    (r##"Ocy;"##, r##"О"##),
    (r##"ocy;"##, r##"о"##),
    (r##"odash;"##, r##"⊝"##),
    (r##"Odblac;"##, r##"Ő"##),
    (r##"odblac;"##, r##"ő"##),
    (r##"odiv;"##, r##"⨸"##),
    (r##"odot;"##, r##"⊙"##),
    (r##"odsold;"##, r##"⦼"##),
    (r##"OElig;"##, r##"Œ"##),
    (r##"oelig;"##, r##"œ"##),
    (r##"ofcir;"##, r##"⦿"##),
    (r##"Ofr;"##, r##"𝔒"##),
    (r##"ofr;"##, r##"𝔬"##),
    (r##"ogon;"##, r##"˛"##),
    (r##"Ograve"##, r##"Ò"##),
    (r##"ograve"##, r##"ò"##),
    (r##"Ograve;"##, r##"Ò"##),
    (r##"ograve;"##, r##"ò"##),
    (r##"ogt;"##, r##"⧁"##),
    (r##"ohbar;"##, r##"⦵"##),
    (r##"ohm;"##, r##"Ω"##),
    (r##"oint;"##, r##"∮"##),
    (r##"olarr;"##, r##"↺"##),
    (r##"olcir;"##, r##"⦾"##),
    (r##"olcross;"##, r##"⦻"##),
    (r##"oline;"##, r##"‾"##),
    (r##"olt;"##, r##"⧀"##),
    (r##"Omacr;"##, r##"Ō"##),
    (r##"omacr;"##, r##"ō"##),
    (r##"Omega;"##, r##"Ω"##),
    (r##"omega;"##, r##"ω"##),
    (r##"Omicron;"##, r##"Ο"##),
    (r##"omicron;"##, r##"ο"##),
    (r##"omid;"##, r##"⦶"##),
    (r##"ominus;"##, r##"⊖"##),
    (r##"Oopf;"##, r##"𝕆"##),
    (r##"oopf;"##, r##"𝕠"##),
    (r##"opar;"##, r##"⦷"##),
    (r##"OpenCurlyDoubleQuote;"##, r##"“"##),
    (r##"OpenCurlyQuote;"##, r##"‘"##),
    (r##"operp;"##, r##"⦹"##),
    (r##"oplus;"##, r##"⊕"##),
    (r##"Or;"##, r##"⩔"##),
    (r##"or;"##, r##"∨"##),
    (r##"orarr;"##, r##"↻"##),
    (r##"ord;"##, r##"⩝"##),
    (r##"order;"##, r##"ℴ"##),
    (r##"orderof;"##, r##"ℴ"##),
    (r##"ordf"##, r##"ª"##),
    (r##"ordf;"##, r##"ª"##),
    (r##"ordm"##, r##"º"##),
    (r##"ordm;"##, r##"º"##),
    (r##"origof;"##, r##"⊶"##),
    (r##"oror;"##, r##"⩖"##),
    (r##"orslope;"##, r##"⩗"##),
    (r##"orv;"##, r##"⩛"##),
    (r##"oS;"##, r##"Ⓢ"##),
    (r##"Oscr;"##, r##"𝒪"##),
    (r##"oscr;"##, r##"ℴ"##),
    (r##"Oslash"##, r##"Ø"##),
    (r##"oslash"##, r##"ø"##),
    (r##"Oslash;"##, r##"Ø"##),
    (r##"oslash;"##, r##"ø"##),
    (r##"osol;"##, r##"⊘"##),
    (r##"Otilde"##, r##"Õ"##),
    (r##"otilde"##, r##"õ"##),
    (r##"Otilde;"##, r##"Õ"##),
    (r##"otilde;"##, r##"õ"##),
    (r##"Otimes;"##, r##"⨷"##),
    (r##"otimes;"##, r##"⊗"##),
    (r##"otimesas;"##, r##"⨶"##),
    (r##"Ouml"##, r##"Ö"##),
    (r##"ouml"##, r##"ö"##),
    (r##"Ouml;"##, r##"Ö"##),
    (r##"ouml;"##, r##"ö"##),
    (r##"ovbar;"##, r##"⌽"##),
    (r##"OverBar;"##, r##"‾"##),
    (r##"OverBrace;"##, r##"⏞"##),
    (r##"OverBracket;"##, r##"⎴"##),
    (r##"OverParenthesis;"##, r##"⏜"##),
    (r##"par;"##, r##"∥"##),
    (r##"para"##, r##"¶"##),
    (r##"para;"##, r##"¶"##),
    (r##"parallel;"##, r##"∥"##),
    (r##"parsim;"##, r##"⫳"##),
    (r##"parsl;"##, r##"⫽"##),
    (r##"part;"##, r##"∂"##),
    (r##"PartialD;"##, r##"∂"##),
    (r##"Pcy;"##, r##"П"##),
    (r##"pcy;"##, r##"п"##),
    (r##"percnt;"##, r##"%"##),
    (r##"period;"##, r##"."##),
    (r##"permil;"##, r##"‰"##),
    (r##"perp;"##, r##"⊥"##),
    (r##"pertenk;"##, r##"‱"##),
    (r##"Pfr;"##, r##"𝔓"##),
    (r##"pfr;"##, r##"𝔭"##),
    (r##"Phi;"##, r##"Φ"##),
    (r##"phi;"##, r##"φ"##),
    (r##"phiv;"##, r##"ϕ"##),
    (r##"phmmat;"##, r##"ℳ"##),
    (r##"phone;"##, r##"☎"##),
    (r##"Pi;"##, r##"Π"##),
    (r##"pi;"##, r##"π"##),
    (r##"pitchfork;"##, r##"⋔"##),
    (r##"piv;"##, r##"ϖ"##),
    (r##"planck;"##, r##"ℏ"##),
    (r##"planckh;"##, r##"ℎ"##),
    (r##"plankv;"##, r##"ℏ"##),
    (r##"plus;"##, r##"+"##),
    (r##"plusacir;"##, r##"⨣"##),
    (r##"plusb;"##, r##"⊞"##),
    (r##"pluscir;"##, r##"⨢"##),
    (r##"plusdo;"##, r##"∔"##),
    (r##"plusdu;"##, r##"⨥"##),
    (r##"pluse;"##, r##"⩲"##),
    (r##"PlusMinus;"##, r##"±"##),
    (r##"plusmn"##, r##"±"##),
    (r##"plusmn;"##, r##"±"##),
    (r##"plussim;"##, r##"⨦"##),
    (r##"plustwo;"##, r##"⨧"##),
    (r##"pm;"##, r##"±"##),
    (r##"Poincareplane;"##, r##"ℌ"##),
    (r##"pointint;"##, r##"⨕"##),
    (r##"Popf;"##, r##"ℙ"##),
    (r##"popf;"##, r##"𝕡"##),
    (r##"pound"##, r##"£"##),
    (r##"pound;"##, r##"£"##),
    (r##"Pr;"##, r##"⪻"##),
    (r##"pr;"##, r##"≺"##),
    (r##"prap;"##, r##"⪷"##),
    (r##"prcue;"##, r##"≼"##),
    (r##"prE;"##, r##"⪳"##),
    (r##"pre;"##, r##"⪯"##),
    (r##"prec;"##, r##"≺"##),
    (r##"precapprox;"##, r##"⪷"##),
    (r##"preccurlyeq;"##, r##"≼"##),
    (r##"Precedes;"##, r##"≺"##),
    (r##"PrecedesEqual;"##, r##"⪯"##),
    (r##"PrecedesSlantEqual;"##, r##"≼"##),
    (r##"PrecedesTilde;"##, r##"≾"##),
    (r##"preceq;"##, r##"⪯"##),
    (r##"precnapprox;"##, r##"⪹"##),
    (r##"precneqq;"##, r##"⪵"##),
    (r##"precnsim;"##, r##"⋨"##),
    (r##"precsim;"##, r##"≾"##),
    (r##"Prime;"##, r##"″"##),
    (r##"prime;"##, r##"′"##),
    (r##"primes;"##, r##"ℙ"##),
    (r##"prnap;"##, r##"⪹"##),
    (r##"prnE;"##, r##"⪵"##),
    (r##"prnsim;"##, r##"⋨"##),
    (r##"prod;"##, r##"∏"##),
    (r##"Product;"##, r##"∏"##),
    (r##"profalar;"##, r##"⌮"##),
    (r##"profline;"##, r##"⌒"##),
    (r##"profsurf;"##, r##"⌓"##),
    (r##"prop;"##, r##"∝"##),
    (r##"Proportion;"##, r##"∷"##),
    (r##"Proportional;"##, r##"∝"##),
    (r##"propto;"##, r##"∝"##),
    (r##"prsim;"##, r##"≾"##),
    (r##"prurel;"##, r##"⊰"##),
    (r##"Pscr;"##, r##"𝒫"##),
    (r##"pscr;"##, r##"𝓅"##),
    (r##"Psi;"##, r##"Ψ"##),
    (r##"psi;"##, r##"ψ"##),
    (r##"puncsp;"##, r##" "##),
    (r##"Qfr;"##, r##"𝔔"##),
    (r##"qfr;"##, r##"𝔮"##),
    (r##"qint;"##, r##"⨌"##),
    (r##"Qopf;"##, r##"ℚ"##),
    (r##"qopf;"##, r##"𝕢"##),
    (r##"qprime;"##, r##"⁗"##),
    (r##"Qscr;"##, r##"𝒬"##),
    (r##"qscr;"##, r##"𝓆"##),
    (r##"quaternions;"##, r##"ℍ"##),
    (r##"quatint;"##, r##"⨖"##),
    (r##"quest;"##, r##"?"##),
    (r##"questeq;"##, r##"≟"##),
    (r##"QUOT"##, r##"""##),
    (r##"quot"##, r##"""##),
    (r##"QUOT;"##, r##"""##),
    (r##"quot;"##, r##"""##),
    (r##"rAarr;"##, r##"⇛"##),
    (r##"race;"##, r##"∽̱"##),
    (r##"Racute;"##, r##"Ŕ"##),
    (r##"racute;"##, r##"ŕ"##),
    (r##"radic;"##, r##"√"##),
    (r##"raemptyv;"##, r##"⦳"##),
    (r##"Rang;"##, r##"⟫"##),
    (r##"rang;"##, r##"⟩"##),
    (r##"rangd;"##, r##"⦒"##),
    (r##"range;"##, r##"⦥"##),
    (r##"rangle;"##, r##"⟩"##),
    (r##"raquo"##, r##"»"##),
    (r##"raquo;"##, r##"»"##),
    (r##"Rarr;"##, r##"↠"##),
    (r##"rArr;"##, r##"⇒"##),
    (r##"rarr;"##, r##"→"##),
    (r##"rarrap;"##, r##"⥵"##),
    (r##"rarrb;"##, r##"⇥"##),
    (r##"rarrbfs;"##, r##"⤠"##),
    (r##"rarrc;"##, r##"⤳"##),
    (r##"rarrfs;"##, r##"⤞"##),
    (r##"rarrhk;"##, r##"↪"##),
    (r##"rarrlp;"##, r##"↬"##),
    (r##"rarrpl;"##, r##"⥅"##),
    (r##"rarrsim;"##, r##"⥴"##),
    (r##"Rarrtl;"##, r##"⤖"##),
    (r##"rarrtl;"##, r##"↣"##),
    (r##"rarrw;"##, r##"↝"##),
    (r##"rAtail;"##, r##"⤜"##),
    (r##"ratail;"##, r##"⤚"##),
    (r##"ratio;"##, r##"∶"##),
    (r##"rationals;"##, r##"ℚ"##),
    (r##"RBarr;"##, r##"⤐"##),
    (r##"rBarr;"##, r##"⤏"##),
    (r##"rbarr;"##, r##"⤍"##),
    (r##"rbbrk;"##, r##"❳"##),
    (r##"rbrace;"##, r##"}"##),
    (r##"rbrack;"##, r##"]"##),
    (r##"rbrke;"##, r##"⦌"##),
    (r##"rbrksld;"##, r##"⦎"##),
    (r##"rbrkslu;"##, r##"⦐"##),
    (r##"Rcaron;"##, r##"Ř"##),
    (r##"rcaron;"##, r##"ř"##),
    (r##"Rcedil;"##, r##"Ŗ"##),
    (r##"rcedil;"##, r##"ŗ"##),
    (r##"rceil;"##, r##"⌉"##),
    (r##"rcub;"##, r##"}"##),
    (r##"Rcy;"##, r##"Р"##),
    (r##"rcy;"##, r##"р"##),
    (r##"rdca;"##, r##"⤷"##),
    (r##"rdldhar;"##, r##"⥩"##),
    (r##"rdquo;"##, r##"”"##),
    (r##"rdquor;"##, r##"”"##),
    (r##"rdsh;"##, r##"↳"##),
    (r##"Re;"##, r##"ℜ"##),
    (r##"real;"##, r##"ℜ"##),
    (r##"realine;"##, r##"ℛ"##),
    (r##"realpart;"##, r##"ℜ"##),
    (r##"reals;"##, r##"ℝ"##),
    (r##"rect;"##, r##"▭"##),
    (r##"REG"##, r##"®"##),
    (r##"reg"##, r##"®"##),
    (r##"REG;"##, r##"®"##),
    (r##"reg;"##, r##"®"##),
    (r##"ReverseElement;"##, r##"∋"##),
    (r##"ReverseEquilibrium;"##, r##"⇋"##),
    (r##"ReverseUpEquilibrium;"##, r##"⥯"##),
    (r##"rfisht;"##, r##"⥽"##),
    (r##"rfloor;"##, r##"⌋"##),
    (r##"Rfr;"##, r##"ℜ"##),
    (r##"rfr;"##, r##"𝔯"##),
    (r##"rHar;"##, r##"⥤"##),
    (r##"rhard;"##, r##"⇁"##),
    (r##"rharu;"##, r##"⇀"##),
    (r##"rharul;"##, r##"⥬"##),
    (r##"Rho;"##, r##"Ρ"##),
    (r##"rho;"##, r##"ρ"##),
    (r##"rhov;"##, r##"ϱ"##),
    (r##"RightAngleBracket;"##, r##"⟩"##),
    (r##"RightArrow;"##, r##"→"##),
    (r##"Rightarrow;"##, r##"⇒"##),
    (r##"rightarrow;"##, r##"→"##),
    (r##"RightArrowBar;"##, r##"⇥"##),
    (r##"RightArrowLeftArrow;"##, r##"⇄"##),
    (r##"rightarrowtail;"##, r##"↣"##),
    (r##"RightCeiling;"##, r##"⌉"##),
    (r##"RightDoubleBracket;"##, r##"⟧"##),
    (r##"RightDownTeeVector;"##, r##"⥝"##),
    (r##"RightDownVector;"##, r##"⇂"##),
    (r##"RightDownVectorBar;"##, r##"⥕"##),
    (r##"RightFloor;"##, r##"⌋"##),
    (r##"rightharpoondown;"##, r##"⇁"##),
    (r##"rightharpoonup;"##, r##"⇀"##),
    (r##"rightleftarrows;"##, r##"⇄"##),
    (r##"rightleftharpoons;"##, r##"⇌"##),
    (r##"rightrightarrows;"##, r##"⇉"##),
    (r##"rightsquigarrow;"##, r##"↝"##),
    (r##"RightTee;"##, r##"⊢"##),
    (r##"RightTeeArrow;"##, r##"↦"##),
    (r##"RightTeeVector;"##, r##"⥛"##),
    (r##"rightthreetimes;"##, r##"⋌"##),
    (r##"RightTriangle;"##, r##"⊳"##),
    (r##"RightTriangleBar;"##, r##"⧐"##),
    (r##"RightTriangleEqual;"##, r##"⊵"##),
    (r##"RightUpDownVector;"##, r##"⥏"##),
    (r##"RightUpTeeVector;"##, r##"⥜"##),
    (r##"RightUpVector;"##, r##"↾"##),
    (r##"RightUpVectorBar;"##, r##"⥔"##),
    (r##"RightVector;"##, r##"⇀"##),
    (r##"RightVectorBar;"##, r##"⥓"##),
    (r##"ring;"##, r##"˚"##),
    (r##"risingdotseq;"##, r##"≓"##),
    (r##"rlarr;"##, r##"⇄"##),
    (r##"rlhar;"##, r##"⇌"##),
    (r##"rlm;"##, r##"‏"##),
    (r##"rmoust;"##, r##"⎱"##),
    (r##"rmoustache;"##, r##"⎱"##),
    (r##"rnmid;"##, r##"⫮"##),
    (r##"roang;"##, r##"⟭"##),
    (r##"roarr;"##, r##"⇾"##),
    (r##"robrk;"##, r##"⟧"##),
    (r##"ropar;"##, r##"⦆"##),
    (r##"Ropf;"##, r##"ℝ"##),
    (r##"ropf;"##, r##"𝕣"##),
    (r##"roplus;"##, r##"⨮"##),
    (r##"rotimes;"##, r##"⨵"##),
    (r##"RoundImplies;"##, r##"⥰"##),
    (r##"rpar;"##, r##")"##),
    (r##"rpargt;"##, r##"⦔"##),
    (r##"rppolint;"##, r##"⨒"##),
    (r##"rrarr;"##, r##"⇉"##),
    (r##"Rrightarrow;"##, r##"⇛"##),
    (r##"rsaquo;"##, r##"›"##),
    (r##"Rscr;"##, r##"ℛ"##),
    (r##"rscr;"##, r##"𝓇"##),
    (r##"Rsh;"##, r##"↱"##),
    (r##"rsh;"##, r##"↱"##),
    (r##"rsqb;"##, r##"]"##),
    (r##"rsquo;"##, r##"’"##),
    (r##"rsquor;"##, r##"’"##),
    (r##"rthree;"##, r##"⋌"##),
    (r##"rtimes;"##, r##"⋊"##),
    (r##"rtri;"##, r##"▹"##),
    (r##"rtrie;"##, r##"⊵"##),
    (r##"rtrif;"##, r##"▸"##),
    (r##"rtriltri;"##, r##"⧎"##),
    (r##"RuleDelayed;"##, r##"⧴"##),
    (r##"ruluhar;"##, r##"⥨"##),
    (r##"rx;"##, r##"℞"##),
    (r##"Sacute;"##, r##"Ś"##),
    (r##"sacute;"##, r##"ś"##),
    (r##"sbquo;"##, r##"‚"##),
    (r##"Sc;"##, r##"⪼"##),
    (r##"sc;"##, r##"≻"##),
    (r##"scap;"##, r##"⪸"##),
    (r##"Scaron;"##, r##"Š"##),
    (r##"scaron;"##, r##"š"##),
    (r##"sccue;"##, r##"≽"##),
    (r##"scE;"##, r##"⪴"##),
    (r##"sce;"##, r##"⪰"##),
    (r##"Scedil;"##, r##"Ş"##),
    (r##"scedil;"##, r##"ş"##),
    (r##"Scirc;"##, r##"Ŝ"##),
    (r##"scirc;"##, r##"ŝ"##),
    (r##"scnap;"##, r##"⪺"##),
    (r##"scnE;"##, r##"⪶"##),
    (r##"scnsim;"##, r##"⋩"##),
    (r##"scpolint;"##, r##"⨓"##),
    (r##"scsim;"##, r##"≿"##),
    (r##"Scy;"##, r##"С"##),
    (r##"scy;"##, r##"с"##),
    (r##"sdot;"##, r##"⋅"##),
    (r##"sdotb;"##, r##"⊡"##),
    (r##"sdote;"##, r##"⩦"##),
    (r##"searhk;"##, r##"⤥"##),
    (r##"seArr;"##, r##"⇘"##),
    (r##"searr;"##, r##"↘"##),
    (r##"searrow;"##, r##"↘"##),
    (r##"sect"##, r##"§"##),
    (r##"sect;"##, r##"§"##),
    (r##"semi;"##, r##";"##),
    (r##"seswar;"##, r##"⤩"##),
    (r##"setminus;"##, r##"∖"##),
    (r##"setmn;"##, r##"∖"##),
    (r##"sext;"##, r##"✶"##),
    (r##"Sfr;"##, r##"𝔖"##),
    (r##"sfr;"##, r##"𝔰"##),
    (r##"sfrown;"##, r##"⌢"##),
    (r##"sharp;"##, r##"♯"##),
    (r##"SHCHcy;"##, r##"Щ"##),
    (r##"shchcy;"##, r##"щ"##),
    (r##"SHcy;"##, r##"Ш"##),
    (r##"shcy;"##, r##"ш"##),
    (r##"ShortDownArrow;"##, r##"↓"##),
    (r##"ShortLeftArrow;"##, r##"←"##),
    (r##"shortmid;"##, r##"∣"##),
    (r##"shortparallel;"##, r##"∥"##),
    (r##"ShortRightArrow;"##, r##"→"##),
    (r##"ShortUpArrow;"##, r##"↑"##),
    (r##"shy"##, r##"­"##),
    (r##"shy;"##, r##"­"##),
    (r##"Sigma;"##, r##"Σ"##),
    (r##"sigma;"##, r##"σ"##),
    (r##"sigmaf;"##, r##"ς"##),
    (r##"sigmav;"##, r##"ς"##),
    (r##"sim;"##, r##"∼"##),
    (r##"simdot;"##, r##"⩪"##),
    (r##"sime;"##, r##"≃"##),
    (r##"simeq;"##, r##"≃"##),
    (r##"simg;"##, r##"⪞"##),
    (r##"simgE;"##, r##"⪠"##),
    (r##"siml;"##, r##"⪝"##),
    (r##"simlE;"##, r##"⪟"##),
    (r##"simne;"##, r##"≆"##),
    (r##"simplus;"##, r##"⨤"##),
    (r##"simrarr;"##, r##"⥲"##),
    (r##"slarr;"##, r##"←"##),
    (r##"SmallCircle;"##, r##"∘"##),
    (r##"smallsetminus;"##, r##"∖"##),
    (r##"smashp;"##, r##"⨳"##),
    (r##"smeparsl;"##, r##"⧤"##),
    (r##"smid;"##, r##"∣"##),
    (r##"smile;"##, r##"⌣"##),
    (r##"smt;"##, r##"⪪"##),
    (r##"smte;"##, r##"⪬"##),
    (r##"smtes;"##, r##"⪬︀"##),
    (r##"SOFTcy;"##, r##"Ь"##),
    (r##"softcy;"##, r##"ь"##),
    (r##"sol;"##, r##"/"##),
    (r##"solb;"##, r##"⧄"##),
    (r##"solbar;"##, r##"⌿"##),
    (r##"Sopf;"##, r##"𝕊"##),
    (r##"sopf;"##, r##"𝕤"##),
    (r##"spades;"##, r##"♠"##),
    (r##"spadesuit;"##, r##"♠"##),
    (r##"spar;"##, r##"∥"##),
    (r##"sqcap;"##, r##"⊓"##),
    (r##"sqcaps;"##, r##"⊓︀"##),
    (r##"sqcup;"##, r##"⊔"##),
    (r##"sqcups;"##, r##"⊔︀"##),
    (r##"Sqrt;"##, r##"√"##),
    (r##"sqsub;"##, r##"⊏"##),
    (r##"sqsube;"##, r##"⊑"##),
    (r##"sqsubset;"##, r##"⊏"##),
    (r##"sqsubseteq;"##, r##"⊑"##),
    (r##"sqsup;"##, r##"⊐"##),
    (r##"sqsupe;"##, r##"⊒"##),
    (r##"sqsupset;"##, r##"⊐"##),
    (r##"sqsupseteq;"##, r##"⊒"##),
    (r##"squ;"##, r##"□"##),
    (r##"Square;"##, r##"□"##),
    (r##"square;"##, r##"□"##),
    (r##"SquareIntersection;"##, r##"⊓"##),
    (r##"SquareSubset;"##, r##"⊏"##),
    (r##"SquareSubsetEqual;"##, r##"⊑"##),
    (r##"SquareSuperset;"##, r##"⊐"##),
    (r##"SquareSupersetEqual;"##, r##"⊒"##),
    (r##"SquareUnion;"##, r##"⊔"##),
    (r##"squarf;"##, r##"▪"##),
    (r##"squf;"##, r##"▪"##),
    (r##"srarr;"##, r##"→"##),
    (r##"Sscr;"##, r##"𝒮"##),
    (r##"sscr;"##, r##"𝓈"##),
    (r##"ssetmn;"##, r##"∖"##),
    (r##"ssmile;"##, r##"⌣"##),
    (r##"sstarf;"##, r##"⋆"##),
    (r##"Star;"##, r##"⋆"##),
    (r##"star;"##, r##"☆"##),
    (r##"starf;"##, r##"★"##),
    (r##"straightepsilon;"##, r##"ϵ"##),
    (r##"straightphi;"##, r##"ϕ"##),
    (r##"strns;"##, r##"¯"##),
    (r##"Sub;"##, r##"⋐"##),
    (r##"sub;"##, r##"⊂"##),
    (r##"subdot;"##, r##"⪽"##),
    (r##"subE;"##, r##"⫅"##),
    (r##"sube;"##, r##"⊆"##),
    (r##"subedot;"##, r##"⫃"##),
    (r##"submult;"##, r##"⫁"##),
    (r##"subnE;"##, r##"⫋"##),
    (r##"subne;"##, r##"⊊"##),
    (r##"subplus;"##, r##"⪿"##),
    (r##"subrarr;"##, r##"⥹"##),
    (r##"Subset;"##, r##"⋐"##),
    (r##"subset;"##, r##"⊂"##),
    (r##"subseteq;"##, r##"⊆"##),
    (r##"subseteqq;"##, r##"⫅"##),
    (r##"SubsetEqual;"##, r##"⊆"##),
    (r##"subsetneq;"##, r##"⊊"##),
    (r##"subsetneqq;"##, r##"⫋"##),
    (r##"subsim;"##, r##"⫇"##),
    (r##"subsub;"##, r##"⫕"##),
    (r##"subsup;"##, r##"⫓"##),
    (r##"succ;"##, r##"≻"##),
    (r##"succapprox;"##, r##"⪸"##),
    (r##"succcurlyeq;"##, r##"≽"##),
    (r##"Succeeds;"##, r##"≻"##),
    (r##"SucceedsEqual;"##, r##"⪰"##),
    (r##"SucceedsSlantEqual;"##, r##"≽"##),
    (r##"SucceedsTilde;"##, r##"≿"##),
    (r##"succeq;"##, r##"⪰"##),
    (r##"succnapprox;"##, r##"⪺"##),
    (r##"succneqq;"##, r##"⪶"##),
    (r##"succnsim;"##, r##"⋩"##),
    (r##"succsim;"##, r##"≿"##),
    (r##"SuchThat;"##, r##"∋"##),
    (r##"Sum;"##, r##"∑"##),
    (r##"sum;"##, r##"∑"##),
    (r##"sung;"##, r##"♪"##),
    (r##"sup1"##, r##"¹"##),
    (r##"sup1;"##, r##"¹"##),
    (r##"sup2"##, r##"²"##),
    (r##"sup2;"##, r##"²"##),
    (r##"sup3"##, r##"³"##),
    (r##"sup3;"##, r##"³"##),
    (r##"Sup;"##, r##"⋑"##),
    (r##"sup;"##, r##"⊃"##),
    (r##"supdot;"##, r##"⪾"##),
    (r##"supdsub;"##, r##"⫘"##),
    (r##"supE;"##, r##"⫆"##),
    (r##"supe;"##, r##"⊇"##),
    (r##"supedot;"##, r##"⫄"##),
    (r##"Superset;"##, r##"⊃"##),
    (r##"SupersetEqual;"##, r##"⊇"##),
    (r##"suphsol;"##, r##"⟉"##),
    (r##"suphsub;"##, r##"⫗"##),
    (r##"suplarr;"##, r##"⥻"##),
    (r##"supmult;"##, r##"⫂"##),
    (r##"supnE;"##, r##"⫌"##),
    (r##"supne;"##, r##"⊋"##),
    (r##"supplus;"##, r##"⫀"##),
    (r##"Supset;"##, r##"⋑"##),
    (r##"supset;"##, r##"⊃"##),
    (r##"supseteq;"##, r##"⊇"##),
    (r##"supseteqq;"##, r##"⫆"##),
    (r##"supsetneq;"##, r##"⊋"##),
    (r##"supsetneqq;"##, r##"⫌"##),
    (r##"supsim;"##, r##"⫈"##),
    (r##"supsub;"##, r##"⫔"##),
    (r##"supsup;"##, r##"⫖"##),
    (r##"swarhk;"##, r##"⤦"##),
    (r##"swArr;"##, r##"⇙"##),
    (r##"swarr;"##, r##"↙"##),
    (r##"swarrow;"##, r##"↙"##),
    (r##"swnwar;"##, r##"⤪"##),
    (r##"szlig"##, r##"ß"##),
    (r##"szlig;"##, r##"ß"##),
    (r##"Tab;"##, r##"	"##),
    (r##"target;"##, r##"⌖"##),
    (r##"Tau;"##, r##"Τ"##),
    (r##"tau;"##, r##"τ"##),
    (r##"tbrk;"##, r##"⎴"##),
    (r##"Tcaron;"##, r##"Ť"##),
    (r##"tcaron;"##, r##"ť"##),
    (r##"Tcedil;"##, r##"Ţ"##),
    (r##"tcedil;"##, r##"ţ"##),
    (r##"Tcy;"##, r##"Т"##),
    (r##"tcy;"##, r##"т"##),
    (r##"tdot;"##, r##"⃛"##),
    (r##"telrec;"##, r##"⌕"##),
    (r##"Tfr;"##, r##"𝔗"##),
    (r##"tfr;"##, r##"𝔱"##),
    (r##"there4;"##, r##"∴"##),
    (r##"Therefore;"##, r##"∴"##),
    (r##"therefore;"##, r##"∴"##),
    (r##"Theta;"##, r##"Θ"##),
    (r##"theta;"##, r##"θ"##),
    (r##"thetasym;"##, r##"ϑ"##),
    (r##"thetav;"##, r##"ϑ"##),
    (r##"thickapprox;"##, r##"≈"##),
    (r##"thicksim;"##, r##"∼"##),
    (r##"ThickSpace;"##, r##"  "##),
    (r##"thinsp;"##, r##" "##),
    (r##"ThinSpace;"##, r##" "##),
    (r##"thkap;"##, r##"≈"##),
    (r##"thksim;"##, r##"∼"##),
    (r##"THORN"##, r##"Þ"##),
    (r##"thorn"##, r##"þ"##),
    (r##"THORN;"##, r##"Þ"##),
    (r##"thorn;"##, r##"þ"##),
    (r##"Tilde;"##, r##"∼"##),
    (r##"tilde;"##, r##"˜"##),
    (r##"TildeEqual;"##, r##"≃"##),
    (r##"TildeFullEqual;"##, r##"≅"##),
    (r##"TildeTilde;"##, r##"≈"##),
    (r##"times"##, r##"×"##),
    (r##"times;"##, r##"×"##),
    (r##"timesb;"##, r##"⊠"##),
    (r##"timesbar;"##, r##"⨱"##),
    (r##"timesd;"##, r##"⨰"##),
    (r##"tint;"##, r##"∭"##),
    (r##"toea;"##, r##"⤨"##),
    (r##"top;"##, r##"⊤"##),
    (r##"topbot;"##, r##"⌶"##),
    (r##"topcir;"##, r##"⫱"##),
    (r##"Topf;"##, r##"𝕋"##),
    (r##"topf;"##, r##"𝕥"##),
    (r##"topfork;"##, r##"⫚"##),
    (r##"tosa;"##, r##"⤩"##),
    (r##"tprime;"##, r##"‴"##),
    (r##"TRADE;"##, r##"™"##),
    (r##"trade;"##, r##"™"##),
    (r##"triangle;"##, r##"▵"##),
    (r##"triangledown;"##, r##"▿"##),
    (r##"triangleleft;"##, r##"◃"##),
    (r##"trianglelefteq;"##, r##"⊴"##),
    (r##"triangleq;"##, r##"≜"##),
    (r##"triangleright;"##, r##"▹"##),
    (r##"trianglerighteq;"##, r##"⊵"##),
    (r##"tridot;"##, r##"◬"##),
    (r##"trie;"##, r##"≜"##),
    (r##"triminus;"##, r##"⨺"##),
    (r##"TripleDot;"##, r##"⃛"##),
    (r##"triplus;"##, r##"⨹"##),
    (r##"trisb;"##, r##"⧍"##),
    (r##"tritime;"##, r##"⨻"##),
    (r##"trpezium;"##, r##"⏢"##),
    (r##"Tscr;"##, r##"𝒯"##),
    (r##"tscr;"##, r##"𝓉"##),
    (r##"TScy;"##, r##"Ц"##),
    (r##"tscy;"##, r##"ц"##),
    (r##"TSHcy;"##, r##"Ћ"##),
    (r##"tshcy;"##, r##"ћ"##),
    (r##"Tstrok;"##, r##"Ŧ"##),
    (r##"tstrok;"##, r##"ŧ"##),
    (r##"twixt;"##, r##"≬"##),
    (r##"twoheadleftarrow;"##, r##"↞"##),
    (r##"twoheadrightarrow;"##, r##"↠"##),
    (r##"Uacute"##, r##"Ú"##),
    (r##"uacute"##, r##"ú"##),
    (r##"Uacute;"##, r##"Ú"##),
    (r##"uacute;"##, r##"ú"##),
    (r##"Uarr;"##, r##"↟"##),
    (r##"uArr;"##, r##"⇑"##),
    (r##"uarr;"##, r##"↑"##),
    (r##"Uarrocir;"##, r##"⥉"##),
    (r##"Ubrcy;"##, r##"Ў"##),
    (r##"ubrcy;"##, r##"ў"##),
    (r##"Ubreve;"##, r##"Ŭ"##),
    (r##"ubreve;"##, r##"ŭ"##),
    (r##"Ucirc"##, r##"Û"##),
    (r##"ucirc"##, r##"û"##),
    (r##"Ucirc;"##, r##"Û"##),
    (r##"ucirc;"##, r##"û"##),
    (r##"Ucy;"##, r##"У"##),
    (r##"ucy;"##, r##"у"##),
    (r##"udarr;"##, r##"⇅"##),
    (r##"Udblac;"##, r##"Ű"##),
    (r##"udblac;"##, r##"ű"##),
    (r##"udhar;"##, r##"⥮"##),
    (r##"ufisht;"##, r##"⥾"##),
    (r##"Ufr;"##, r##"𝔘"##),
    (r##"ufr;"##, r##"𝔲"##),
    (r##"Ugrave"##, r##"Ù"##),
    (r##"ugrave"##, r##"ù"##),
    (r##"Ugrave;"##, r##"Ù"##),
    (r##"ugrave;"##, r##"ù"##),
    (r##"uHar;"##, r##"⥣"##),
    (r##"uharl;"##, r##"↿"##),
    (r##"uharr;"##, r##"↾"##),
    (r##"uhblk;"##, r##"▀"##),
    (r##"ulcorn;"##, r##"⌜"##),
    (r##"ulcorner;"##, r##"⌜"##),
    (r##"ulcrop;"##, r##"⌏"##),
    (r##"ultri;"##, r##"◸"##),
    (r##"Umacr;"##, r##"Ū"##),
    (r##"umacr;"##, r##"ū"##),
    (r##"uml"##, r##"¨"##),
    (r##"uml;"##, r##"¨"##),
    (r##"UnderBar;"##, r##"_"##),
    (r##"UnderBrace;"##, r##"⏟"##),
    (r##"UnderBracket;"##, r##"⎵"##),
    (r##"UnderParenthesis;"##, r##"⏝"##),
    (r##"Union;"##, r##"⋃"##),
    (r##"UnionPlus;"##, r##"⊎"##),
    (r##"Uogon;"##, r##"Ų"##),
    (r##"uogon;"##, r##"ų"##),
    (r##"Uopf;"##, r##"𝕌"##),
    (r##"uopf;"##, r##"𝕦"##),
    (r##"UpArrow;"##, r##"↑"##),
    (r##"Uparrow;"##, r##"⇑"##),
    (r##"uparrow;"##, r##"↑"##),
    (r##"UpArrowBar;"##, r##"⤒"##),
    (r##"UpArrowDownArrow;"##, r##"⇅"##),
    (r##"UpDownArrow;"##, r##"↕"##),
    (r##"Updownarrow;"##, r##"⇕"##),
    (r##"updownarrow;"##, r##"↕"##),
    (r##"UpEquilibrium;"##, r##"⥮"##),
    (r##"upharpoonleft;"##, r##"↿"##),
    (r##"upharpoonright;"##, r##"↾"##),
    (r##"uplus;"##, r##"⊎"##),
    (r##"UpperLeftArrow;"##, r##"↖"##),
    (r##"UpperRightArrow;"##, r##"↗"##),
    (r##"Upsi;"##, r##"ϒ"##),
    (r##"upsi;"##, r##"υ"##),
    (r##"upsih;"##, r##"ϒ"##),
    (r##"Upsilon;"##, r##"Υ"##),
    (r##"upsilon;"##, r##"υ"##),
    (r##"UpTee;"##, r##"⊥"##),
    (r##"UpTeeArrow;"##, r##"↥"##),
    (r##"upuparrows;"##, r##"⇈"##),
    (r##"urcorn;"##, r##"⌝"##),
    (r##"urcorner;"##, r##"⌝"##),
    (r##"urcrop;"##, r##"⌎"##),
    (r##"Uring;"##, r##"Ů"##),
    (r##"uring;"##, r##"ů"##),
    (r##"urtri;"##, r##"◹"##),
    (r##"Uscr;"##, r##"𝒰"##),
    (r##"uscr;"##, r##"𝓊"##),
    (r##"utdot;"##, r##"⋰"##),
    (r##"Utilde;"##, r##"Ũ"##),
    (r##"utilde;"##, r##"ũ"##),
    (r##"utri;"##, r##"▵"##),
    (r##"utrif;"##, r##"▴"##),
    (r##"uuarr;"##, r##"⇈"##),
    (r##"Uuml"##, r##"Ü"##),
    (r##"uuml"##, r##"ü"##),
    (r##"Uuml;"##, r##"Ü"##),
    (r##"uuml;"##, r##"ü"##),
    (r##"uwangle;"##, r##"⦧"##),
    (r##"vangrt;"##, r##"⦜"##),
    (r##"varepsilon;"##, r##"ϵ"##),
    (r##"varkappa;"##, r##"ϰ"##),
    (r##"varnothing;"##, r##"∅"##),
    (r##"varphi;"##, r##"ϕ"##),
    (r##"varpi;"##, r##"ϖ"##),
    (r##"varpropto;"##, r##"∝"##),
    (r##"vArr;"##, r##"⇕"##),
    (r##"varr;"##, r##"↕"##),
    (r##"varrho;"##, r##"ϱ"##),
    (r##"varsigma;"##, r##"ς"##),
    (r##"varsubsetneq;"##, r##"⊊︀"##),
    (r##"varsubsetneqq;"##, r##"⫋︀"##),
    (r##"varsupsetneq;"##, r##"⊋︀"##),
    (r##"varsupsetneqq;"##, r##"⫌︀"##),
    (r##"vartheta;"##, r##"ϑ"##),
    (r##"vartriangleleft;"##, r##"⊲"##),
    (r##"vartriangleright;"##, r##"⊳"##),
    (r##"Vbar;"##, r##"⫫"##),
    (r##"vBar;"##, r##"⫨"##),
    (r##"vBarv;"##, r##"⫩"##),
    (r##"Vcy;"##, r##"В"##),
    (r##"vcy;"##, r##"в"##),
    (r##"VDash;"##, r##"⊫"##),
    (r##"Vdash;"##, r##"⊩"##),
    (r##"vDash;"##, r##"⊨"##),
    (r##"vdash;"##, r##"⊢"##),
    (r##"Vdashl;"##, r##"⫦"##),
    (r##"Vee;"##, r##"⋁"##),
    (r##"vee;"##, r##"∨"##),
    (r##"veebar;"##, r##"⊻"##),
    (r##"veeeq;"##, r##"≚"##),
    (r##"vellip;"##, r##"⋮"##),
    (r##"Verbar;"##, r##"‖"##),
    (r##"verbar;"##, r##"|"##),
    (r##"Vert;"##, r##"‖"##),
    (r##"vert;"##, r##"|"##),
    (r##"VerticalBar;"##, r##"∣"##),
    (r##"VerticalLine;"##, r##"|"##),
    (r##"VerticalSeparator;"##, r##"❘"##),
    (r##"VerticalTilde;"##, r##"≀"##),
    (r##"VeryThinSpace;"##, r##" "##),
    (r##"Vfr;"##, r##"𝔙"##),
    (r##"vfr;"##, r##"𝔳"##),
    (r##"vltri;"##, r##"⊲"##),
    (r##"vnsub;"##, r##"⊂⃒"##),
    (r##"vnsup;"##, r##"⊃⃒"##),
    (r##"Vopf;"##, r##"𝕍"##),
    (r##"vopf;"##, r##"𝕧"##),
    (r##"vprop;"##, r##"∝"##),
    (r##"vrtri;"##, r##"⊳"##),
    (r##"Vscr;"##, r##"𝒱"##),
    (r##"vscr;"##, r##"𝓋"##),
    (r##"vsubnE;"##, r##"⫋︀"##),
    (r##"vsubne;"##, r##"⊊︀"##),
    (r##"vsupnE;"##, r##"⫌︀"##),
    (r##"vsupne;"##, r##"⊋︀"##),
    (r##"Vvdash;"##, r##"⊪"##),
    (r##"vzigzag;"##, r##"⦚"##),
    (r##"Wcirc;"##, r##"Ŵ"##),
    (r##"wcirc;"##, r##"ŵ"##),
    (r##"wedbar;"##, r##"⩟"##),
    (r##"Wedge;"##, r##"⋀"##),
    (r##"wedge;"##, r##"∧"##),
    (r##"wedgeq;"##, r##"≙"##),
    (r##"weierp;"##, r##"℘"##),
    (r##"Wfr;"##, r##"𝔚"##),
    (r##"wfr;"##, r##"𝔴"##),
    (r##"Wopf;"##, r##"𝕎"##),
    (r##"wopf;"##, r##"𝕨"##),
    (r##"wp;"##, r##"℘"##),
    (r##"wr;"##, r##"≀"##),
    (r##"wreath;"##, r##"≀"##),
    (r##"Wscr;"##, r##"𝒲"##),
    (r##"wscr;"##, r##"𝓌"##),
    (r##"xcap;"##, r##"⋂"##),
    (r##"xcirc;"##, r##"◯"##),
    (r##"xcup;"##, r##"⋃"##),
    (r##"xdtri;"##, r##"▽"##),
    (r##"Xfr;"##, r##"𝔛"##),
    (r##"xfr;"##, r##"𝔵"##),
    (r##"xhArr;"##, r##"⟺"##),
    (r##"xharr;"##, r##"⟷"##),
    (r##"Xi;"##, r##"Ξ"##),
    (r##"xi;"##, r##"ξ"##),
    (r##"xlArr;"##, r##"⟸"##),
    (r##"xlarr;"##, r##"⟵"##),
    (r##"xmap;"##, r##"⟼"##),
    (r##"xnis;"##, r##"⋻"##),
    (r##"xodot;"##, r##"⨀"##),
    (r##"Xopf;"##, r##"𝕏"##),
    (r##"xopf;"##, r##"𝕩"##),
    (r##"xoplus;"##, r##"⨁"##),
    (r##"xotime;"##, r##"⨂"##),
    (r##"xrArr;"##, r##"⟹"##),
    (r##"xrarr;"##, r##"⟶"##),
    (r##"Xscr;"##, r##"𝒳"##),
    (r##"xscr;"##, r##"𝓍"##),
    (r##"xsqcup;"##, r##"⨆"##),
    (r##"xuplus;"##, r##"⨄"##),
    (r##"xutri;"##, r##"△"##),
    (r##"xvee;"##, r##"⋁"##),
    (r##"xwedge;"##, r##"⋀"##),
    (r##"Yacute"##, r##"Ý"##),
    (r##"yacute"##, r##"ý"##),
    (r##"Yacute;"##, r##"Ý"##),
    (r##"yacute;"##, r##"ý"##),
    (r##"YAcy;"##, r##"Я"##),
    (r##"yacy;"##, r##"я"##),
    (r##"Ycirc;"##, r##"Ŷ"##),
    (r##"ycirc;"##, r##"ŷ"##),
    (r##"Ycy;"##, r##"Ы"##),
    (r##"ycy;"##, r##"ы"##),
    (r##"yen"##, r##"¥"##),
    (r##"yen;"##, r##"¥"##),
    (r##"Yfr;"##, r##"𝔜"##),
    (r##"yfr;"##, r##"𝔶"##),
    (r##"YIcy;"##, r##"Ї"##),
    (r##"yicy;"##, r##"ї"##),
    (r##"Yopf;"##, r##"𝕐"##),
    (r##"yopf;"##, r##"𝕪"##),
    (r##"Yscr;"##, r##"𝒴"##),
    (r##"yscr;"##, r##"𝓎"##),
    (r##"YUcy;"##, r##"Ю"##),
    (r##"yucy;"##, r##"ю"##),
    (r##"yuml"##, r##"ÿ"##),
    (r##"Yuml;"##, r##"Ÿ"##),
    (r##"yuml;"##, r##"ÿ"##),
    (r##"Zacute;"##, r##"Ź"##),
    (r##"zacute;"##, r##"ź"##),
    (r##"Zcaron;"##, r##"Ž"##),
    (r##"zcaron;"##, r##"ž"##),
    (r##"Zcy;"##, r##"З"##),
    (r##"zcy;"##, r##"з"##),
    (r##"Zdot;"##, r##"Ż"##),
    (r##"zdot;"##, r##"ż"##),
    (r##"zeetrf;"##, r##"ℨ"##),
    (r##"ZeroWidthSpace;"##, r##"​"##),
    (r##"Zeta;"##, r##"Ζ"##),
    (r##"zeta;"##, r##"ζ"##),
    (r##"Zfr;"##, r##"ℨ"##),
    (r##"zfr;"##, r##"𝔷"##),
    (r##"ZHcy;"##, r##"Ж"##),
    (r##"zhcy;"##, r##"ж"##),
    (r##"zigrarr;"##, r##"⇝"##),
    (r##"Zopf;"##, r##"ℤ"##),
    (r##"zopf;"##, r##"𝕫"##),
    (r##"Zscr;"##, r##"𝒵"##),
    (r##"zscr;"##, r##"𝓏"##),
    (r##"zwj;"##, r##"‍"##),
    (r##"zwnj;"##, r##"‌"##),
];
